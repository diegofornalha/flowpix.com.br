[{"/Users/coflow/Desktop/pega_ai/src/ui/pages/404.js":"1","/Users/coflow/Desktop/pega_ai/src/ui/pages/500.js":"2","/Users/coflow/Desktop/pega_ai/src/ui/pages/[account]/drops/[dropID].js":"3","/Users/coflow/Desktop/pega_ai/src/ui/pages/[account]/index.js":"4","/Users/coflow/Desktop/pega_ai/src/ui/pages/[account]/raffles/[raffleID].js":"5","/Users/coflow/Desktop/pega_ai/src/ui/pages/_app.js":"6","/Users/coflow/Desktop/pega_ai/src/ui/pages/api/hello.js":"7","/Users/coflow/Desktop/pega_ai/src/ui/pages/create/ft_drop.js":"8","/Users/coflow/Desktop/pega_ai/src/ui/pages/create/nft_raffle.js":"9","/Users/coflow/Desktop/pega_ai/src/ui/pages/index.js":"10","/Users/coflow/Desktop/pega_ai/src/ui/components/Footer.js":"11","/Users/coflow/Desktop/pega_ai/src/ui/components/Landing.js":"12","/Users/coflow/Desktop/pega_ai/src/ui/components/NavigationBar.js":"13","/Users/coflow/Desktop/pega_ai/src/ui/components/common/AlertModal.js":"14","/Users/coflow/Desktop/pega_ai/src/ui/components/common/BasicInfoBoard.js":"15","/Users/coflow/Desktop/pega_ai/src/ui/components/common/BasicNotification.js":"16","/Users/coflow/Desktop/pega_ai/src/ui/components/common/CSVSelector.js":"17","/Users/coflow/Desktop/pega_ai/src/ui/components/common/ClaimedModal.js":"18","/Users/coflow/Desktop/pega_ai/src/ui/components/common/CreatedModal.js":"19","/Users/coflow/Desktop/pega_ai/src/ui/components/common/CriteriaCard.js":"20","/Users/coflow/Desktop/pega_ai/src/ui/components/common/ImageSelector.js":"21","/Users/coflow/Desktop/pega_ai/src/ui/components/common/ShareCard.js":"22","/Users/coflow/Desktop/pega_ai/src/ui/components/common/TagsCard.js":"23","/Users/coflow/Desktop/pega_ai/src/ui/components/common/TimeLimitCard.js":"24","/Users/coflow/Desktop/pega_ai/src/ui/components/common/TimeLimitPicker.js":"25","/Users/coflow/Desktop/pega_ai/src/ui/components/common/TransactionNotification.js":"26","/Users/coflow/Desktop/pega_ai/src/ui/components/common/Warning.js":"27","/Users/coflow/Desktop/pega_ai/src/ui/components/drop/ClaimCard.js":"28","/Users/coflow/Desktop/pega_ai/src/ui/components/drop/ClaimHistory.js":"29","/Users/coflow/Desktop/pega_ai/src/ui/components/drop/DropCard.js":"30","/Users/coflow/Desktop/pega_ai/src/ui/components/drop/DropCreator.js":"31","/Users/coflow/Desktop/pega_ai/src/ui/components/drop/DropList.js":"32","/Users/coflow/Desktop/pega_ai/src/ui/components/drop/DropPresenter.js":"33","/Users/coflow/Desktop/pega_ai/src/ui/components/drop/ManageCard.js":"34","/Users/coflow/Desktop/pega_ai/src/ui/components/drop/PacketModeSelector.js":"35","/Users/coflow/Desktop/pega_ai/src/ui/components/drop/PacketSelector.js":"36","/Users/coflow/Desktop/pega_ai/src/ui/components/drop/StatsCard.js":"37","/Users/coflow/Desktop/pega_ai/src/ui/components/drop/TokenSelector.js":"38","/Users/coflow/Desktop/pega_ai/src/ui/components/eligibility/EligibilityModeSelector.js":"39","/Users/coflow/Desktop/pega_ai/src/ui/components/eligibility/FloatReviewer.js":"40","/Users/coflow/Desktop/pega_ai/src/ui/components/eligibility/WhitelistInput.js":"41","/Users/coflow/Desktop/pega_ai/src/ui/components/eligibility/WhitelistReviewer.js":"42","/Users/coflow/Desktop/pega_ai/src/ui/components/eligibility/WhitelistWithAmountInput.js":"43","/Users/coflow/Desktop/pega_ai/src/ui/components/eligibility/WhitelistWithAmountReviewer.js":"44","/Users/coflow/Desktop/pega_ai/src/ui/components/float/FloatEventList.js":"45","/Users/coflow/Desktop/pega_ai/src/ui/components/float/FloatPicker.js":"46","/Users/coflow/Desktop/pega_ai/src/ui/components/raffle/ActionCard.js":"47","/Users/coflow/Desktop/pega_ai/src/ui/components/raffle/EnrolledHistory.js":"48","/Users/coflow/Desktop/pega_ai/src/ui/components/raffle/NFTCard.js":"49","/Users/coflow/Desktop/pega_ai/src/ui/components/raffle/NFTSelector.js":"50","/Users/coflow/Desktop/pega_ai/src/ui/components/raffle/RaffleCard.js":"51","/Users/coflow/Desktop/pega_ai/src/ui/components/raffle/RaffleCreator.js":"52","/Users/coflow/Desktop/pega_ai/src/ui/components/raffle/RaffleList.js":"53","/Users/coflow/Desktop/pega_ai/src/ui/components/raffle/RaffleManageCard.js":"54","/Users/coflow/Desktop/pega_ai/src/ui/components/raffle/RafflePresenter.js":"55","/Users/coflow/Desktop/pega_ai/src/ui/components/raffle/RaffleStatsCard.js":"56","/Users/coflow/Desktop/pega_ai/src/ui/components/raffle/RewardCard.js":"57","/Users/coflow/Desktop/pega_ai/src/ui/components/raffle/WinnersCard.js":"58","/Users/coflow/Desktop/pega_ai/src/ui/lib/atoms.js":"59","/Users/coflow/Desktop/pega_ai/src/ui/lib/cloud-scripts.js":"60","/Users/coflow/Desktop/pega_ai/src/ui/lib/cloud-transactions.js":"61","/Users/coflow/Desktop/pega_ai/src/ui/lib/float-scripts.js":"62","/Users/coflow/Desktop/pega_ai/src/ui/lib/hints.js":"63","/Users/coflow/Desktop/pega_ai/src/ui/lib/mist-scripts.js":"64","/Users/coflow/Desktop/pega_ai/src/ui/lib/mist-transactions.js":"65","/Users/coflow/Desktop/pega_ai/src/ui/lib/scripts.js":"66","/Users/coflow/Desktop/pega_ai/src/ui/lib/transactions.js":"67","/Users/coflow/Desktop/pega_ai/src/ui/lib/utils.js":"68"},{"size":840,"mtime":1689554463000,"results":"69","hashOfConfig":"70"},{"size":643,"mtime":1689554463000,"results":"71","hashOfConfig":"70"},{"size":3354,"mtime":1689554463000,"results":"72","hashOfConfig":"70"},{"size":6353,"mtime":1694387512647,"results":"73","hashOfConfig":"70"},{"size":3083,"mtime":1689554463000,"results":"74","hashOfConfig":"70"},{"size":1746,"mtime":1689554463000,"results":"75","hashOfConfig":"70"},{"size":170,"mtime":1689554463000,"results":"76","hashOfConfig":"70"},{"size":263,"mtime":1689554463000,"results":"77","hashOfConfig":"70"},{"size":273,"mtime":1689554463000,"results":"78","hashOfConfig":"70"},{"size":252,"mtime":1689554463000,"results":"79","hashOfConfig":"70"},{"size":1027,"mtime":1694386928490,"results":"80","hashOfConfig":"70"},{"size":4391,"mtime":1694387219272,"results":"81","hashOfConfig":"70"},{"size":3845,"mtime":1694388581767,"results":"82","hashOfConfig":"70"},{"size":3821,"mtime":1689554463000,"results":"83","hashOfConfig":"70"},{"size":5013,"mtime":1694387940487,"results":"84","hashOfConfig":"70"},{"size":3637,"mtime":1689554463000,"results":"85","hashOfConfig":"70"},{"size":973,"mtime":1689554463000,"results":"86","hashOfConfig":"70"},{"size":2957,"mtime":1689554463000,"results":"87","hashOfConfig":"70"},{"size":3503,"mtime":1689554463000,"results":"88","hashOfConfig":"70"},{"size":5163,"mtime":1689554463000,"results":"89","hashOfConfig":"70"},{"size":1487,"mtime":1694387815518,"results":"90","hashOfConfig":"70"},{"size":1469,"mtime":1689554463000,"results":"91","hashOfConfig":"70"},{"size":3486,"mtime":1689554463000,"results":"92","hashOfConfig":"70"},{"size":1517,"mtime":1689554463000,"results":"93","hashOfConfig":"70"},{"size":3192,"mtime":1689554463000,"results":"94","hashOfConfig":"70"},{"size":5225,"mtime":1689554463000,"results":"95","hashOfConfig":"70"},{"size":617,"mtime":1689554463000,"results":"96","hashOfConfig":"70"},{"size":5819,"mtime":1694388440842,"results":"97","hashOfConfig":"70"},{"size":5498,"mtime":1689554463000,"results":"98","hashOfConfig":"70"},{"size":5921,"mtime":1689554463000,"results":"99","hashOfConfig":"70"},{"size":15831,"mtime":1694388185188,"results":"100","hashOfConfig":"70"},{"size":8062,"mtime":1689554463000,"results":"101","hashOfConfig":"70"},{"size":1846,"mtime":1689554463000,"results":"102","hashOfConfig":"70"},{"size":9010,"mtime":1689554463000,"results":"103","hashOfConfig":"70"},{"size":5027,"mtime":1689554463000,"results":"104","hashOfConfig":"70"},{"size":4032,"mtime":1689554463000,"results":"105","hashOfConfig":"70"},{"size":10788,"mtime":1689554463000,"results":"106","hashOfConfig":"70"},{"size":5070,"mtime":1694388366418,"results":"107","hashOfConfig":"70"},{"size":8294,"mtime":1689554463000,"results":"108","hashOfConfig":"70"},{"size":691,"mtime":1689554463000,"results":"109","hashOfConfig":"70"},{"size":5980,"mtime":1689554463000,"results":"110","hashOfConfig":"70"},{"size":336,"mtime":1689554463000,"results":"111","hashOfConfig":"70"},{"size":8597,"mtime":1689554463000,"results":"112","hashOfConfig":"70"},{"size":455,"mtime":1689554463000,"results":"113","hashOfConfig":"70"},{"size":4747,"mtime":1689554463000,"results":"114","hashOfConfig":"70"},{"size":7348,"mtime":1689554463000,"results":"115","hashOfConfig":"70"},{"size":9455,"mtime":1694388316952,"results":"116","hashOfConfig":"70"},{"size":6899,"mtime":1689554463000,"results":"117","hashOfConfig":"70"},{"size":3046,"mtime":1689554463000,"results":"118","hashOfConfig":"70"},{"size":7093,"mtime":1694388112122,"results":"119","hashOfConfig":"70"},{"size":6137,"mtime":1689554463000,"results":"120","hashOfConfig":"70"},{"size":16474,"mtime":1694388217601,"results":"121","hashOfConfig":"70"},{"size":8380,"mtime":1694387153668,"results":"122","hashOfConfig":"70"},{"size":7448,"mtime":1689554463000,"results":"123","hashOfConfig":"70"},{"size":2240,"mtime":1689554463000,"results":"124","hashOfConfig":"70"},{"size":3222,"mtime":1689554463000,"results":"125","hashOfConfig":"70"},{"size":2806,"mtime":1689554463000,"results":"126","hashOfConfig":"70"},{"size":5357,"mtime":1689554463000,"results":"127","hashOfConfig":"70"},{"size":770,"mtime":1689554463000,"results":"128","hashOfConfig":"70"},{"size":6219,"mtime":1689554463000,"results":"129","hashOfConfig":"70"},{"size":19878,"mtime":1689554463000,"results":"130","hashOfConfig":"70"},{"size":4750,"mtime":1689554463000,"results":"131","hashOfConfig":"70"},{"size":1888,"mtime":1689554463000,"results":"132","hashOfConfig":"70"},{"size":9135,"mtime":1689554463000,"results":"133","hashOfConfig":"70"},{"size":22940,"mtime":1689554463000,"results":"134","hashOfConfig":"70"},{"size":6333,"mtime":1689554463000,"results":"135","hashOfConfig":"70"},{"size":1552,"mtime":1689554463000,"results":"136","hashOfConfig":"70"},{"size":12481,"mtime":1689554463000,"results":"137","hashOfConfig":"70"},{"filePath":"138","messages":"139","suppressedMessages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"p5hyey",{"filePath":"141","messages":"142","suppressedMessages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"144","messages":"145","suppressedMessages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"147","messages":"148","suppressedMessages":"149","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"150","messages":"151","suppressedMessages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"153","messages":"154","suppressedMessages":"155","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156"},{"filePath":"157","messages":"158","suppressedMessages":"159","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"160","messages":"161","suppressedMessages":"162","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"163","messages":"164","suppressedMessages":"165","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"166","messages":"167","suppressedMessages":"168","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"169","messages":"170","suppressedMessages":"171","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172"},{"filePath":"173","messages":"174","suppressedMessages":"175","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"176","messages":"177","suppressedMessages":"178","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179"},{"filePath":"180","messages":"181","suppressedMessages":"182","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"183","messages":"184","suppressedMessages":"185","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"186","messages":"187","suppressedMessages":"188","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189"},{"filePath":"190","messages":"191","suppressedMessages":"192","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"193","messages":"194","suppressedMessages":"195","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"196","messages":"197","suppressedMessages":"198","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"199","messages":"200","suppressedMessages":"201","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"202","messages":"203","suppressedMessages":"204","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"205","messages":"206","suppressedMessages":"207","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"208","messages":"209","suppressedMessages":"210","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"211","messages":"212","suppressedMessages":"213","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"214","messages":"215","suppressedMessages":"216","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"217","messages":"218","suppressedMessages":"219","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"220","messages":"221","suppressedMessages":"222","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"223","messages":"224","suppressedMessages":"225","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"226","messages":"227","suppressedMessages":"228","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"229","messages":"230","suppressedMessages":"231","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"232","messages":"233","suppressedMessages":"234","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"235","messages":"236","suppressedMessages":"237","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"238","messages":"239","suppressedMessages":"240","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"241","messages":"242","suppressedMessages":"243","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"244","messages":"245","suppressedMessages":"246","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"247","messages":"248","suppressedMessages":"249","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"250"},{"filePath":"251","messages":"252","suppressedMessages":"253","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"254","messages":"255","suppressedMessages":"256","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"257","messages":"258","suppressedMessages":"259","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"260"},{"filePath":"261","messages":"262","suppressedMessages":"263","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"264","messages":"265","suppressedMessages":"266","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"267","messages":"268","suppressedMessages":"269","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"270","messages":"271","suppressedMessages":"272","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"273","messages":"274","suppressedMessages":"275","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"276","messages":"277","suppressedMessages":"278","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"279","messages":"280","suppressedMessages":"281","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"282"},{"filePath":"283","messages":"284","suppressedMessages":"285","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"286","messages":"287","suppressedMessages":"288","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"289","messages":"290","suppressedMessages":"291","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"292","messages":"293","suppressedMessages":"294","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"295","messages":"296","suppressedMessages":"297","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"298","messages":"299","suppressedMessages":"300","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"301","messages":"302","suppressedMessages":"303","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"304","messages":"305","suppressedMessages":"306","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"307","messages":"308","suppressedMessages":"309","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"310","messages":"311","suppressedMessages":"312","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"313","messages":"314","suppressedMessages":"315","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"316","messages":"317","suppressedMessages":"318","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"319","messages":"320","suppressedMessages":"321","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"322","messages":"323","suppressedMessages":"324","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"325","messages":"326","suppressedMessages":"327","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"328","messages":"329","suppressedMessages":"330","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"331","messages":"332","suppressedMessages":"333","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"334","messages":"335","suppressedMessages":"336","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"337","messages":"338","suppressedMessages":"339","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"340","messages":"341","suppressedMessages":"342","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"343","messages":"344","suppressedMessages":"345","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"346","messages":"347","suppressedMessages":"348","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/coflow/Desktop/pega_ai/src/ui/pages/404.js",[],[],"/Users/coflow/Desktop/pega_ai/src/ui/pages/500.js",[],[],"/Users/coflow/Desktop/pega_ai/src/ui/pages/[account]/drops/[dropID].js",[],[],"/Users/coflow/Desktop/pega_ai/src/ui/pages/[account]/index.js",[],[],"/Users/coflow/Desktop/pega_ai/src/ui/pages/[account]/raffles/[raffleID].js",[],[],"/Users/coflow/Desktop/pega_ai/src/ui/pages/_app.js",["349"],[],"import '../styles/globals.css'\nimport { useState, useEffect } from \"react\"\nimport Head from 'next/head'\nimport { RecoilRoot } from \"recoil\"\n\nimport * as fcl from \"@onflow/fcl\"\n\nimport NavigationBar from '../components/NavigationBar'\nimport Footer from '../components/Footer'\nimport TransactionNotification from '../components/common/TransactionNotification'\nimport BasicNotification from '../components/common/BasicNotification'\nimport publicConfig from '../publicConfig'\nimport useSWRImmutable from 'swr'\nimport { domainOfAddressesFetcher } from '../lib/utils'\n\nfunction MyApp({ Component, pageProps }) {\n  const [user, setUser] = useState({ loggedIn: null })\n  useEffect(() => fcl.currentUser.subscribe(setUser), [])\n\n  const { data: domainData, error: domainError} = useSWRImmutable(\n    user.loggedIn == true ? [\"domainOfAddressesFetcher\", [user.addr]] : null, domainOfAddressesFetcher\n  )\n\n  const [domains, setDomains] = useState({})\n\n  useEffect(() => {\n    if (domainData && user && user.loggedIn) {\n      setDomains(domainData[user.addr])    \n    }\n  }, [domainData])\n\n  return (\n    <>\n      <div className=\"bg-white text-black bg-[url('/bg.png')] bg-cover bg-center min-h-screen\">\n        <RecoilRoot>\n          <Head>\n            <title>drizzle | token distribution tool</title>\n            <meta property=\"og:title\" content=\"drizzle | token distribution tool\" key=\"title\" />\n          </Head>\n          <NavigationBar user={{...user, domains: domains, address: user.addr}} />\n          <Component {...pageProps} user={{...user, domains: domains, address: user.addr}} />\n          <Footer />\n          <TransactionNotification />\n          <BasicNotification />\n        </RecoilRoot>\n      </div>\n    </>\n  )\n\n}\n\nexport default MyApp\n","/Users/coflow/Desktop/pega_ai/src/ui/pages/api/hello.js",[],[],"/Users/coflow/Desktop/pega_ai/src/ui/pages/create/ft_drop.js",[],[],"/Users/coflow/Desktop/pega_ai/src/ui/pages/create/nft_raffle.js",[],[],"/Users/coflow/Desktop/pega_ai/src/ui/pages/index.js",[],[],"/Users/coflow/Desktop/pega_ai/src/ui/components/Footer.js",["350"],[],"import Image from \"next/image\"\nimport { useEffect, useState } from \"react\"\nimport { NameService } from \"../lib/utils\";\nimport { useRecoilState } from \"recoil\"\nimport { nameServiceState } from \"../lib/atoms\";\n\nexport default function Footer() {\n  const [nameService, setNameService] = useRecoilState(nameServiceState)\n\n  useEffect(() => {\n    const _nameService = localStorage.getItem('PreferredNameService')\n    if (_nameService) {\n      setNameService(_nameService)\n    } else {\n      setNameService(NameService.find)\n    }\n  }, [])\n\n  useEffect(() => {\n    if (nameService != null) {\n      localStorage.setItem('PreferredNameService', nameService);\n    }\n  }, [nameService]);\n\n  return (\n    <footer className=\"m-auto mt-60 max-w-[920px] flex flex-1 justify-center items-center py-8 border-t border-solid box-border\">\n      <div className=\"flex flex-col gap-y-2 items-center\">\n        <div\n          className=\"flex gap-x-2 items-center font-flow text-sm mb-5 -mt-3\"\n        >\n        </div>\n      </div>\n\n    </footer>\n  )\n}","/Users/coflow/Desktop/pega_ai/src/ui/components/Landing.js",[],[],"/Users/coflow/Desktop/pega_ai/src/ui/components/NavigationBar.js",["351"],[],"import Image from \"next/image\"\nimport Link from 'next/link'\nimport { useRouter } from 'next/router'\n\nimport * as fcl from \"@onflow/fcl\"\nimport config from \"../flow/config.js\"\nimport { LogoutIcon } from \"@heroicons/react/outline\"\nimport publicConfig from \"../publicConfig.js\"\nimport { useEffect } from \"react\"\nimport { displayUsername } from \"../lib/utils.js\"\n\nimport { useRecoilState } from \"recoil\"\nimport {\n  showBasicNotificationState,\n  basicNotificationContentState,\n  nameServiceState\n} from \"../lib/atoms.js\"\n\nexport default function NavigationBar(props) {\n  const user = props.user\n  const router = useRouter()\n  const [, setShowBasicNotification] = useRecoilState(showBasicNotificationState)\n  const [, setBasicNotificationContent] = useRecoilState(basicNotificationContentState)\n  const [nameService, ] = useRecoilState(nameServiceState)\n\n  useEffect(() => {\n    window.addEventListener(\"message\", async (d) => {\n      if ((d.data.type === \"FCL:VIEW:RESPONSE\" && d.data.status === \"APPROVED\" && (d.data.data.network && d.data.data.network !== publicConfig.chainEnv))\n        || (d.data.type === \"LILICO:NETWORK\" && typeof d.data.network === \"string\" && d.data.network != publicConfig.chainEnv)) {\n        setShowBasicNotification(true)\n        setBasicNotificationContent({ type: \"exclamation\", title: \"WRONG NETWORK\", detail: null })\n        await new Promise(r => setTimeout(r, 2))\n        fcl.unauthenticate()\n      }\n    })\n  }, [])\n\n  const AuthedState = () => {\n    return (\n      <div className=\"shrink truncate flex gap-x-2 items-center\">\n        <button\n          className=\"shrink truncate font-flow text-base\n          text-drizzle-green-dark shadow-sm\n          bg-drizzle-green-light rounded-full px-3 py-2 leading-5\"\n          onClick={() => {\n            if (user) {\n              router.push(`/${user.addr}`)\n            }\n          }}\n        >\n          {user && displayUsername(user, nameService)}\n        </button>\n        <button\n          type=\"button\"\n          className=\"shrink-0 bg-drizzle-green-light rounded-full p-2\"\n          onClick={() => {\n            fcl.unauthenticate()\n            router.push(\"/\")\n          }}>\n          <LogoutIcon className=\"h-5 w-5 text-drizzle-green-dark\" />\n        </button>\n      </div>\n    )\n  }\n\n  const UnauthenticatedState = () => {\n    return (\n      <div>\n        <button\n          type=\"button\"\n          className=\"h-12 px-6 text-base rounded-2xl font-flow font-semibold shadow-sm text-black bg-drizzle-green hover:bg-drizzle-green-dark\"\n          onClick={fcl.logIn}\n        >\n          <label className=\"hidden sm:block\">Connect Wallet</label>\n          <label className=\"block sm:hidden\">Connect</label>\n        </button>\n      </div>\n    )\n  }\n\n  return (\n    <div className=\"px-6 m-auto max-w-[920px] min-w-[380px] relative gap-x-5 flex items-center justify-between bg-transparent h-44\">\n      <div className=\"flex items-center gap-x-2\">\n        <Link href=\"/\">\n          <div className=\"min-w-[40px]\">\n            <Image src=\"/drizzle.png\" alt=\"\" width={50} height={50} priority={true} />\n          </div>\n        </Link>\n\n        <Link href=\"/\">\n          <label className=\"font-flow font-bold text-3xl\">\n            Pega Aí!\n          </label>\n        </Link>\n        <label className=\"hidden sm:block px-1 text-center font-flow text-drizzle-green font-medium text-xs border border-1 border-drizzle-green\">\n          {`${publicConfig.chainEnv == \"mainnet\" ? \"BETA\" : \"TESTNET\"}`}\n        </label>\n        <label className=\"block sm:hidden px-1 text-center font-flow text-drizzle-green font-medium text-xs border border-1 border-drizzle-green\">\n          {`${publicConfig.chainEnv == \"mainnet\" ? \"BETA\" : \"T\"}`}\n        </label>\n      </div>\n\n      {user && user.loggedIn\n        ? <AuthedState />\n        : <UnauthenticatedState />\n      }\n    </div>\n  )\n}","/Users/coflow/Desktop/pega_ai/src/ui/components/common/AlertModal.js",[],[],"/Users/coflow/Desktop/pega_ai/src/ui/components/common/BasicInfoBoard.js",[],[],"/Users/coflow/Desktop/pega_ai/src/ui/components/common/BasicNotification.js",["352"],[],"import { Fragment, useEffect } from 'react'\nimport { Transition } from '@headlessui/react'\nimport {\n  InformationCircleIcon,\n  ExclamationCircleIcon\n} from '@heroicons/react/outline'\nimport { XIcon } from '@heroicons/react/solid'\n\nimport { useRecoilState } from \"recoil\"\nimport {\n  basicNotificationContentState,\n  showBasicNotificationState,\n} from \"../../lib/atoms\"\n\nconst NotificationIcon = ({ type }) => {\n  if (type == \"exclamation\") {\n    return (\n      <div className=\"flex-shrink-0\">\n        <ExclamationCircleIcon className=\"h-6 w-6 text-red-500\" aria-hidden=\"true\" />\n      </div>\n    )\n  }\n\n  return (\n    <div className=\"flex-shrink-0\">\n      <InformationCircleIcon className=\"h-6 w-6 text-gray-400\" aria-hidden=\"true\" />\n    </div>\n  )\n}\n\nNotificationIcon.displayName = \"NotificationIcon\"\n\nexport default function BasicNotification() {\n  const [showBasicNotification, setShowBasicNotification] = useRecoilState(showBasicNotificationState)\n  const [basicNotificationContent,] = useRecoilState(basicNotificationContentState)\n  const type = basicNotificationContent && basicNotificationContent.type\n  const title = basicNotificationContent && basicNotificationContent.title\n  const detail = basicNotificationContent && basicNotificationContent.detail\n\n  useEffect(() => {\n    if (showBasicNotification) {\n      setTimeout(() => setShowBasicNotification(false), 2000)\n    }\n  }, [showBasicNotification])\n  return (\n    <>\n      {/* Global notification live region, render this permanently at the end of the document */}\n      <div\n        aria-live=\"assertive\"\n        className=\"fixed inset-0 flex items-end px-4 py-6 pointer-events-none sm:p-6 sm:items-start\"\n      >\n        <div className=\"w-full flex flex-col items-center space-y-4 sm:items-end\">\n          {/* Notification panel, dynamically insert this into the live region when it needs to be displayed */}\n          <Transition\n            show={showBasicNotification}\n            as={Fragment}\n            enter=\"transform ease-out duration-300 transition\"\n            enterFrom=\"translate-y-2 opacity-0 sm:translate-y-0 sm:translate-x-2\"\n            enterTo=\"translate-y-0 opacity-100 sm:translate-x-0\"\n            leave=\"transition ease-in duration-100\"\n            leaveFrom=\"opacity-100\"\n            leaveTo=\"opacity-0\"\n          >\n            <div className=\"max-w-sm w-full bg-white shadow-lg rounded-lg pointer-events-auto ring-1 ring-black ring-opacity-5 overflow-hidden\">\n              <div className=\"p-4\">\n                <div className=\"flex items-start\">\n                  <NotificationIcon type={type} />\n                  <div className=\"ml-3 w-0 flex-1 pt-0.5\">\n                    <p className=\"text-sm font-bold font-flow text-gray-900\">{title}</p>\n                    <p className=\"mt-1 text-sm text-gray-500 break-words max-h-36 overflow-hidden\">{detail}</p>\n                  </div>\n                  <div className=\"ml-4 flex-shrink-0 flex\">\n                    <button\n                      type=\"button\"\n                      className=\"bg-white rounded-md inline-flex text-gray-400 hover:text-gray-500 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-drizzle-green-dark\"\n                      onClick={() => {\n                        setShowBasicNotification(false)\n                      }}\n                    >\n                      <span className=\"sr-only\">Close</span>\n                      <XIcon className=\"h-5 w-5\" aria-hidden=\"true\" />\n                    </button>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </Transition>\n        </div>\n      </div>\n    </>\n  )\n}","/Users/coflow/Desktop/pega_ai/src/ui/components/common/CSVSelector.js",[],[],"/Users/coflow/Desktop/pega_ai/src/ui/components/common/ClaimedModal.js",[],[],"/Users/coflow/Desktop/pega_ai/src/ui/components/common/CreatedModal.js",[],[],"/Users/coflow/Desktop/pega_ai/src/ui/components/common/CriteriaCard.js",[],[],"/Users/coflow/Desktop/pega_ai/src/ui/components/common/ImageSelector.js",[],[],"/Users/coflow/Desktop/pega_ai/src/ui/components/common/ShareCard.js",[],[],"/Users/coflow/Desktop/pega_ai/src/ui/components/common/TagsCard.js",[],[],"/Users/coflow/Desktop/pega_ai/src/ui/components/common/TimeLimitCard.js",[],[],"/Users/coflow/Desktop/pega_ai/src/ui/components/common/TimeLimitPicker.js",[],[],"/Users/coflow/Desktop/pega_ai/src/ui/components/common/TransactionNotification.js",[],[],"/Users/coflow/Desktop/pega_ai/src/ui/components/common/Warning.js",[],[],"/Users/coflow/Desktop/pega_ai/src/ui/components/drop/ClaimCard.js",[],[],"/Users/coflow/Desktop/pega_ai/src/ui/components/drop/ClaimHistory.js",[],[],"/Users/coflow/Desktop/pega_ai/src/ui/components/drop/DropCard.js",[],[],"/Users/coflow/Desktop/pega_ai/src/ui/components/drop/DropCreator.js",[],[],"/Users/coflow/Desktop/pega_ai/src/ui/components/drop/DropList.js",[],[],"/Users/coflow/Desktop/pega_ai/src/ui/components/drop/DropPresenter.js",[],[],"/Users/coflow/Desktop/pega_ai/src/ui/components/drop/ManageCard.js",[],[],"/Users/coflow/Desktop/pega_ai/src/ui/components/drop/PacketModeSelector.js",[],[],"/Users/coflow/Desktop/pega_ai/src/ui/components/drop/PacketSelector.js",["353"],[],"import { useEffect } from 'react'\nimport Warning from '../common/Warning';\n\nimport PacketModeSelector from \"./PacketModeSelector\";\n\nexport default function PacketSelector(props) {\n  const {\n    mode, setMode,\n    capacity, setCapacity,\n    identicalAmount, setIdenticalAmount,\n    totalAmount, setTotalAmount\n  } = props\n  const disabled = props.disabled || false\n\n  useEffect(() => {\n    setCapacity('')\n    setTotalAmount('')\n    setIdenticalAmount('')\n  }, [mode])\n\n  const showExtraInputs = (mode) => {\n    if (!mode) { return null }\n    if (mode.key === \"Random\") {\n      return (\n        <div className=\"w-full flex flex-col gap-y-2 mt-1\">\n          <Warning content={`Someone may get higher reward than expected value by Try & Abort. This mode should only be used for fun!`}/>\n          <div className=\"flex items-center gap-x-2 sm:justify-between sm:w-full\">\n            <label className=\"block w-[75px] shrink-0 font-flow font-bold\">Capacity</label>\n            <input\n              type=\"number\"\n              disabled={disabled}\n              id=\"capacity\"\n              min=\"1\"\n              value={capacity}\n              className=\"grow w-full rounded-2xl focus:ring-drizzle-green-dark focus:border-drizzle-green-dark bg-drizzle-green-ultralight border-drizzle-green font-flow text-lg placeholder:text-gray-300\"\n              onWheel={(e) => e.target.blur()}\n              onChange={(event) => { setCapacity(event.target.value) }}\n            />\n          </div>\n          <div className=\"flex items-center gap-x-2\">\n            <label className=\"block w-[75px] shrink-0 font-flow font-bold\">Total Amount</label>\n            <input\n              type=\"number\"\n              disabled={disabled}\n              id=\"total_amount\"\n              min=\"0\"\n              value={totalAmount}\n              className=\"grow w-full rounded-2xl focus:ring-drizzle-green-dark focus:border-drizzle-green-dark bg-drizzle-green-ultralight border-drizzle-green font-flow text-lg placeholder:text-gray-300\"\n              onWheel={(e) => e.target.blur()}\n              onChange={(event) => { setTotalAmount(event.target.value) }}\n            />\n          </div>\n        </div>\n      )\n    }\n\n    if (mode.key === \"Identical\") {\n      return (\n        <div className=\"flex flex-col gap-y-2 mt-1\">\n          <div className=\"flex items-center gap-x-2 sm:justify-between sm:w-full\">\n            <label className=\"block w-[75px] shrink-0 font-flow font-bold\">Capacity</label>\n            <input\n              type=\"number\"\n              disabled={disabled}\n              id=\"capacity\"\n              value={capacity}\n              min=\"1\"\n              className=\"grow w-full rounded-2xl focus:ring-drizzle-green-dark focus:border-drizzle-green-dark bg-drizzle-green-ultralight border-drizzle-green font-flow text-lg placeholder:text-gray-300\"\n              onWheel={(e) => e.target.blur()}\n              onChange={(event) => { setCapacity(event.target.value) }}\n            />\n          </div>\n          <div className=\"flex items-center gap-x-2\">\n            <label className=\"block w-[75px] shrink-0 font-flow font-bold\">Amt Per Account</label>\n            <input\n              type=\"number\"\n              disabled={disabled}\n              id=\"per_amount\"\n              value={identicalAmount}\n              min=\"0\"\n              className=\"grow w-full rounded-2xl focus:ring-drizzle-green-dark focus:border-drizzle-green-dark bg-drizzle-green-ultralight border-drizzle-green font-flow text-lg placeholder:text-gray-300\"\n              onWheel={(e) => e.target.blur()}\n              onChange={(event) => { setIdenticalAmount(event.target.value) }}\n            />\n          </div>\n        </div>\n      )\n    }\n\n    return null\n  }\n\n  return (\n    <div className=\"flex flex-col gap-y-2\">\n      <label className=\"block text-2xl font-bold font-flow\">\n        Distribution<span className=\"text-red-600\">*</span>\n      </label>\n      <PacketModeSelector mode={mode} setMode={setMode} />\n      {\n        showExtraInputs(mode)\n      }\n    </div>\n  )\n}","/Users/coflow/Desktop/pega_ai/src/ui/components/drop/StatsCard.js",[],[],"/Users/coflow/Desktop/pega_ai/src/ui/components/drop/TokenSelector.js",[],[],"/Users/coflow/Desktop/pega_ai/src/ui/components/eligibility/EligibilityModeSelector.js",["354"],[],"import { RadioGroup } from '@headlessui/react'\nimport Hints from '../../lib/hints'\nimport { FloatModeFloatEvent, FloatModeFloatGroup } from '../float/FloatPicker'\nimport { checkPacketMode } from '../drop/PacketModeSelector'\nimport Decimal from 'decimal.js'\nimport { useEffect } from 'react'\n\nexport const EligibilityModeWhitelistWitAmount = {\n  key: \"WhitelistWithAmount\",\n  name: 'Whitelist with Amount',\n  intro: (type) => {\n    if (type === \"DROP\") {\n      return 'Distribute specific amount to specific account on whitelist'\n    }\n\n    if (type === \"RAFFLE\") {\n      return 'Accounts on whitelist is eligible for registration'\n    }\n\n    return \"\"\n  },\n  checkParams: (whitelistWithAmountReviewerCallback, tokenBalance) => {\n    if (!whitelistWithAmountReviewerCallback) {\n      return [false, Hints.NeedProcessRA]\n    }\n    if (whitelistWithAmountReviewerCallback.invalidRecordsCount > 0) {\n      return [false, Hints.HaveInvalidRARecords]\n    }\n    if (whitelistWithAmountReviewerCallback.tokenAmount.cmp(tokenBalance) != -1) {\n      return [false, Hints.InsufficientBalance]\n    }\n    if (whitelistWithAmountReviewerCallback.tokenAmount.isZero() ||\n      whitelistWithAmountReviewerCallback.tokenAmount.isNegative()) {\n      return [false, Hints.InvalidTokenAmount]\n    }\n\n    return [true, Hints.Valid]\n  },\n  checkRaffleParams: () => {\n    // This mode is not supported in Raffle\n    throw \"invalid mode\"\n  }\n}\n\nexport const EligibilityModeWhitelist = {\n  key: \"Whitelist\",\n  name: 'Whitelist',\n  intro: (type) => {\n    if (type === \"DROP\") {\n      return 'Distribute tokens to holders of specific FLOAT. FCFS'\n    }\n\n    if (type === \"RAFFLE\") {\n      return 'Accounts on whitelist is eligible for registration'\n    }\n\n    return \"\"\n  },\n  checkParams: (\n    whitelistReviewerCallback, packetMode, totalBalance, capacity, amount = {}\n  ) => {\n    try {\n      const [valid, hint] = checkPacketMode(packetMode, totalBalance, capacity, amount)\n      if (!valid) {\n        throw hint\n      }\n      if (!whitelistReviewerCallback) {\n        throw Hints.NeedProcessR\n      }\n      if (whitelistReviewerCallback.invalidRecordsCount > 0) {\n        throw Hints.HaveInvalidRRecords\n      }\n\n      return [true, Hints.Valid]\n    } catch (error) {\n      return [false, error]\n    }\n  },\n  checkRaffleParams: (whitelistReviewerCallback) => {\n    try {\n      if (!whitelistReviewerCallback) {\n        throw Hints.NeedProcessR\n      }\n      if (whitelistReviewerCallback.invalidRecordsCount > 0) {\n        throw Hints.HaveInvalidRRecords\n      }\n\n      return [true, Hints.Valid]\n    } catch (error) {\n      return [false, error]\n    } \n  }\n}\n\nexport const EligibilityModeFLOAT = {\n  key: \"FLOAT\",\n  name: 'FLOAT',\n  intro: (type) => {\n    if (type === \"DROP\") {\n      return 'Distribute tokens to holders of specific FLOAT. FCFS'\n    }\n\n    if (type === \"RAFFLE\") {\n      return 'Holders of specific FLOAT is eligible for registration'\n    }\n\n    return \"\"\n  },\n  detail: FloatModeFloatEvent,\n  checkParams: (floatEvents, threshold, packetMode, totalBalance, capacity, amount = {}) => {\n    try {\n      const [valid, hint] = checkPacketMode(packetMode, totalBalance, capacity, amount)\n      if (!valid) {\n        throw hint\n      }\n      if (floatEvents.length != 1) {\n        throw Hints.InvalidFloatEvent\n      }\n      // threshold should be 1 now\n      return [true, Hints.Valid]\n    } catch (error) {\n      return [false, error]\n    }\n  },\n  checkRaffleParams: (floatEvents) => {\n    try {\n      if (floatEvents.length != 1) {\n        throw Hints.InvalidFloatEvent\n      }\n      // threshold should be 1 now\n      return [true, Hints.Valid]\n    } catch (error) {\n      return [false, error]\n    } \n  }\n}\n\nexport const EligibilityModeFLOATGroup = {\n  key: \"FLOATGroup\",\n  name: 'FLOAT Group',\n  intro: (type) => {\n    if (type === \"DROP\") {\n      return 'Distribute tokens to holders of FLOATs in specific FLOAT Group. FCFS'\n    }\n\n    if (type === \"RAFFLE\") {\n      return 'Holders of FLOATs in specific FLOAT Group is eligible for registration'\n    }\n\n    return \"\"\n  },\n  detail: FloatModeFloatGroup,\n  checkParams: (floatEvents, threshold, packetMode, totalBalance, capacity, amount = {}) => {\n    try {\n      const [valid, hint] = checkPacketMode(packetMode, totalBalance, capacity, amount)\n      if (!valid) {\n        throw hint\n      }\n\n      if (floatEvents.length == 0) {\n        throw Hints.EmptyFloatGroup\n      }\n\n      if (!threshold || isNaN(parseInt(threshold))) {\n        throw Hints.InvalidThreshold\n      }\n\n      const _threshold = new Decimal(threshold)\n      if (!(_threshold.isInteger() && _threshold.isPositive() && !_threshold.isZero() && _threshold.toNumber() <= floatEvents.length)) {\n        throw Hints.InvalidThreshold\n      }\n\n      return [true, Hints.Valid]\n    } catch (error) {\n      return [false, error]\n    }\n  },\n  checkRaffleParams: (floatEvents, threshold) => {\n    try {\n      if (floatEvents.length == 0) {\n        throw Hints.EmptyFloatGroup\n      }\n\n      if (!threshold || isNaN(parseInt(threshold))) {\n        throw Hints.InvalidThreshold\n      }\n\n      const _threshold = new Decimal(threshold)\n      if (!(_threshold.isInteger() && _threshold.isPositive() && !_threshold.isZero() && _threshold.toNumber() <= floatEvents.length)) {\n        throw Hints.InvalidThreshold\n      }\n\n      return [true, Hints.Valid]\n    } catch (error) {\n      return [false, error]\n    }\n  }\n}\n\nconst dropModes = [\n  EligibilityModeFLOAT,\n  EligibilityModeFLOATGroup,\n  EligibilityModeWhitelist,\n  EligibilityModeWhitelistWitAmount,\n]\n\nconst raffleModes = [\n  EligibilityModeFLOAT,\n  EligibilityModeFLOATGroup,\n  EligibilityModeWhitelist \n]\n\nexport default function EligibilityModeSelector(props) {\n  const { mode, setMode, setPacketMode, type } = props\n  const _type = type || \"DROP\"\n  const modes = _type === \"DROP\" ? dropModes : raffleModes\n\n  useEffect(() => {\n    if (setPacketMode) {\n      setPacketMode(null)\n    }\n  }, [mode])\n\n  return (\n    <div className=\"mx-auto w-full\">\n      <RadioGroup value={mode} onChange={setMode}>\n        <RadioGroup.Label className=\"sr-only\">Server size</RadioGroup.Label>\n        <div className=\"grid grid-cols-1 gap-y-3 sm:grid-cols-2 sm:gap-x-4 auto-rows-fr\">\n          {modes.map((mode) => (\n            <RadioGroup.Option\n              key={mode.key}\n              value={mode}\n              className={({ active, checked }) =>\n                `${active\n                  ? 'ring-2 ring-drizzle-green ring-offset-2'\n                  : 'ring-1 ring-black ring-opacity-5'\n                }\n                  ${checked ? 'bg-drizzle-green text-black' : 'bg-white'\n                }\n\n                  relative flex cursor-pointer rounded-2xl px-5 py-4 shadow-md focus:outline-none`\n              }\n            >\n              {({ active, checked }) => (\n                <>\n                  <div className=\"flex w-full items-start justify-between\">\n                    <div className=\"flex items-center\">\n                      <div className=\"text-sm\">\n                        <RadioGroup.Label\n                          as=\"p\"\n                          className={`font-semibold font-flow text-lg`}\n                        >\n                          {mode.name}\n                        </RadioGroup.Label>\n                        <RadioGroup.Description\n                          as=\"span\"\n                          className={`inline text-gray-500`}\n                        >\n                          {mode.intro(_type)}\n                        </RadioGroup.Description>\n                      </div>\n                    </div>\n                    {checked && (\n                      <div className=\"shrink-0 text-white\">\n                        <CheckIcon className=\"h-6 w-6\" />\n                      </div>\n                    )}\n                  </div>\n                </>\n              )}\n            </RadioGroup.Option>\n          ))}\n        </div>\n      </RadioGroup>\n    </div>\n  )\n}\n\nfunction CheckIcon(props) {\n  return (\n    <svg viewBox=\"0 0 24 24\" fill=\"none\" {...props}>\n      <circle cx={12} cy={12} r={12} fill=\"#fff\" opacity=\"0.2\" />\n      <path\n        d=\"M7 13l3 3 7-7\"\n        stroke=\"#fff\"\n        strokeWidth={1.5}\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n    </svg>\n  )\n}","/Users/coflow/Desktop/pega_ai/src/ui/components/eligibility/FloatReviewer.js",[],[],"/Users/coflow/Desktop/pega_ai/src/ui/components/eligibility/WhitelistInput.js",[],[],"/Users/coflow/Desktop/pega_ai/src/ui/components/eligibility/WhitelistReviewer.js",[],[],"/Users/coflow/Desktop/pega_ai/src/ui/components/eligibility/WhitelistWithAmountInput.js",[],[],"/Users/coflow/Desktop/pega_ai/src/ui/components/eligibility/WhitelistWithAmountReviewer.js",[],[],"/Users/coflow/Desktop/pega_ai/src/ui/components/float/FloatEventList.js",[],[],"/Users/coflow/Desktop/pega_ai/src/ui/components/float/FloatPicker.js",["355","356"],[],"import { useState, useEffect } from 'react'\n\nimport { useRecoilState } from \"recoil\"\nimport {\n  basicNotificationContentState,\n  showBasicNotificationState,\n  transactionInProgressState,\n} from \"../../lib/atoms\"\nimport { classNames, floatEventInputHandler, floatGroupInputHandler, isValidFlowAddress } from \"../../lib/utils\"\nimport { getFloatEvent, getFloatEventsInGroup } from '../../lib/float-scripts'\nimport FloatEventList from './FloatEventList'\nimport Warning from '../common/Warning'\nimport publicConfig from '../../publicConfig'\n\nexport const FloatModeFloatEvent = {\n  key: \"FLOATEvent\",\n  title: \"FLOAT Event\",\n  description: `Enter the url of the FLOAT Event. Or enter event id and event host, concat them with \"@\". For instance: ${publicConfig.chainEnv == \"testnet\" ? \"98963710@0x257c27ba4951541d\" : \"420442474@0x39b144ab4d348e2b\"}.`,\n  placeholder: `${publicConfig.chainEnv == \"testnet\" ? \"98963710@0x257c27ba4951541d\" : \"420442474@0x39b144ab4d348e2b\"}`,\n  inputHandler: floatEventInputHandler\n}\n\nexport const FloatModeFloatGroup = {\n  key: \"FLOATGroup\",\n  title: \"FLOAT Group\",\n  description: `Enter the url of the FLOAT Group. Or enter group name and group creator, concat them with \"@\". For instance: ${publicConfig.chainEnv == \"testnet\" ? \"Drizzle@0x257c27ba4951541d\" : \"Drizzle@0x39b144ab4d348e2b\"}.`,\n  placeholder: `${publicConfig.chainEnv == \"testnet\" ? \"Drizzle@0x257c27ba4951541d\" : \"Drizzle@0x39b144ab4d348e2b\"}`,\n  inputHandler: floatGroupInputHandler\n}\n\nexport default function FloatPicker(props) {\n  const [, setShowBasicNotification] = useRecoilState(showBasicNotificationState)\n  const [, setBasicNotificationContent] = useRecoilState(basicNotificationContentState)\n  const [transactionInProgress,] = useRecoilState(transactionInProgressState)\n\n  const [rawEventStr, setRawEventStr] = useState('')\n\n  // FLOAT || FLOATGroup\n  const mode = props.mode || FloatModeFloatEvent\n  const disabled = props.disabled || false\n\n  const {\n    threshold, setThreshold,\n    rawFloatInput,\n    floatEvents,\n    setFloatEvents,\n    setFloatGroup,\n    setFloatEventPairs\n  } = props\n  \n  useEffect(() => {\n    if (floatEvents.length == 1) {\n      setThreshold(1)\n    }\n  }, [floatEvents])\n\n  useEffect(() => {\n    setThreshold('')\n    setFloatEvents([])\n    setFloatGroup(null)\n    setFloatEventPairs([])\n    setRawEventStr('')\n  }, [mode])\n\n  useEffect(() => {\n    if (rawFloatInput) {\n      setRawEventStr(rawFloatInput)\n    }\n  }, [rawFloatInput])\n\n  return (\n    <div className=\"space-y-2\">\n      <label className=\"block text-2xl font-bold font-flow\">\n        {mode.title}<span className=\"text-red-600\">*</span>\n      </label>\n      <Warning content=\"FLOAT(s) received after the creation of this DROP will not be counted in when checking eligibility.\" />\n      <label className=\"block font-flow text-md leading-6 mt-2 mb-2\">\n        {mode.description}\n      </label>\n      <div className=\"w-full flex justify-between gap-x-2 sm:gap-x-3\">\n        <input\n          type=\"text\"\n          name=\"floatPicker\"\n          id=\"floatPicker\"\n          className=\"w-full bg-drizzle-green-ultralight grow border-drizzle-green font-flow text-lg rounded-2xl\n          focus:ring-drizzle-green-dark focus:border-drizzle-green-dark  placeholder:text-gray-300\"\n          disabled={transactionInProgress}\n          value={rawEventStr}\n          placeholder={mode.placeholder}\n          onChange={(event) => {\n            setRawEventStr(event.target.value)\n          }}\n        />\n        <button\n          type=\"button\"\n          className={classNames(\n            transactionInProgress ? \"bg-drizzle-green-light\" : \"bg-drizzle-green hover:bg-drizzle-green-dark\",\n            `rounded-xl h-12 px-3 sm:px-6 text-base font-medium shadow-sm text-black`\n          )}\n          disabled={transactionInProgress}\n          onClick={async () => {\n            setFloatEventPairs([])\n            setFloatEvents([])\n            setShowBasicNotification(false)\n            if (rawEventStr && mode) {\n              try {\n                let events = []\n                if (mode.key === \"FLOATEvent\") {\n                  const floatEvents = await mode.inputHandler(rawEventStr)\n                  for (let i = 0; i < floatEvents.length; i++) {\n                    let floatEvent = floatEvents[i]\n                    let event = await getFloatEvent(floatEvent.eventHost, floatEvent.eventID)\n                    if (event) {\n                      events.push(event)\n                    }\n                  }\n                  if (events.length > 0) {\n                    setFloatEventPairs(floatEvents)\n                    setFloatEvents(events)\n                  } else {\n                    throw \"No events\"\n                  }\n                } else if (mode.key === \"FLOATGroup\") {\n                  const group = await mode.inputHandler(rawEventStr)\n                  const _events = await getFloatEventsInGroup(group.groupHost, group.groupName)\n                  if (_events && _events.length > 0) {\n                    events = _events.sort((a, b) => b.eventId - a.eventId)\n                    setFloatGroup(group)\n                    setFloatEvents(events)\n                  } else {\n                    throw \"Group not exist or no events in group\"\n                  }\n                }\n\n              } catch (error) {\n                let err = error.message || error\n                if (err.includes(\"This event does not exist in the account\")) {\n                  err = \"This event does not exist in the account\"\n                } else if (err.includes(\"This group doesn't exist\")) {\n                  err = \"This group doesn't exist\"\n                }\n                setShowBasicNotification(true)\n                setBasicNotificationContent({ type: \"exclamation\", title: \"Invalid Params\", detail: err })\n              }\n            } else {\n              setShowBasicNotification(true)\n              setBasicNotificationContent({ type: \"exclamation\", title: \"Invalid Params\", detail: \"invalid FLOAT info or mode\" })\n            }\n          }}\n        >\n          Sync\n        </button>\n      </div>\n      {floatEvents.length > 0 ?\n        <div className=\"w-full mt-2\">\n          <FloatEventList events={floatEvents} />\n          {\n            floatEvents.length > 1 ?\n              <div className=\"w-full flex flex-col gap-y-2 mt-3\">\n                <div className=\"flex items-center gap-x-2 sm:justify-between sm:w-full\">\n                  <label className=\"block w-[75px] shrink-0 font-flow font-bold\">Threshold</label>\n                  <input\n                    type=\"number\"\n                    disabled={disabled}\n                    min=\"1\"\n                    max={floatEvents.length}\n                    value={threshold}\n                    id=\"threshold\"\n                    className=\"grow w-full rounded-2xl focus:ring-drizzle-green-dark focus:border-drizzle-green-dark bg-drizzle-green-ultralight border-drizzle-green font-flow text-lg placeholder:text-gray-300\"\n                    onWheel={(e) => e.target.blur()}\n                    onChange={(event) => { setThreshold(event.target.value) }}\n                  />\n                  <label className=\"shrink-0 font-float font-bold\">of {floatEvents.length} FLOATs</label>\n                </div>\n              </div> : null\n          }\n        </div>\n        : null\n      }\n    </div>\n  )\n}","/Users/coflow/Desktop/pega_ai/src/ui/components/raffle/ActionCard.js",[],[],"/Users/coflow/Desktop/pega_ai/src/ui/components/raffle/EnrolledHistory.js",[],[],"/Users/coflow/Desktop/pega_ai/src/ui/components/raffle/NFTCard.js",[],[],"/Users/coflow/Desktop/pega_ai/src/ui/components/raffle/NFTSelector.js",[],[],"/Users/coflow/Desktop/pega_ai/src/ui/components/raffle/RaffleCard.js",[],[],"/Users/coflow/Desktop/pega_ai/src/ui/components/raffle/RaffleCreator.js",[],[],"/Users/coflow/Desktop/pega_ai/src/ui/components/raffle/RaffleList.js",[],[],"/Users/coflow/Desktop/pega_ai/src/ui/components/raffle/RaffleManageCard.js",[],[],"/Users/coflow/Desktop/pega_ai/src/ui/components/raffle/RafflePresenter.js",[],[],"/Users/coflow/Desktop/pega_ai/src/ui/components/raffle/RaffleStatsCard.js",[],[],"/Users/coflow/Desktop/pega_ai/src/ui/components/raffle/RewardCard.js",[],[],"/Users/coflow/Desktop/pega_ai/src/ui/components/raffle/WinnersCard.js",[],[],"/Users/coflow/Desktop/pega_ai/src/ui/lib/atoms.js",[],[],"/Users/coflow/Desktop/pega_ai/src/ui/lib/cloud-scripts.js",[],[],"/Users/coflow/Desktop/pega_ai/src/ui/lib/cloud-transactions.js",[],[],"/Users/coflow/Desktop/pega_ai/src/ui/lib/float-scripts.js",[],[],"/Users/coflow/Desktop/pega_ai/src/ui/lib/hints.js",[],[],"/Users/coflow/Desktop/pega_ai/src/ui/lib/mist-scripts.js",[],[],"/Users/coflow/Desktop/pega_ai/src/ui/lib/mist-transactions.js",[],[],"/Users/coflow/Desktop/pega_ai/src/ui/lib/scripts.js",[],[],"/Users/coflow/Desktop/pega_ai/src/ui/lib/transactions.js",[],[],"/Users/coflow/Desktop/pega_ai/src/ui/lib/utils.js",[],[],{"ruleId":"357","severity":1,"message":"358","line":30,"column":6,"nodeType":"359","endLine":30,"endColumn":18,"suggestions":"360"},{"ruleId":"357","severity":1,"message":"361","line":17,"column":6,"nodeType":"359","endLine":17,"endColumn":8,"suggestions":"362"},{"ruleId":"357","severity":1,"message":"363","line":36,"column":6,"nodeType":"359","endLine":36,"endColumn":8,"suggestions":"364"},{"ruleId":"357","severity":1,"message":"365","line":44,"column":6,"nodeType":"359","endLine":44,"endColumn":29,"suggestions":"366"},{"ruleId":"357","severity":1,"message":"367","line":19,"column":6,"nodeType":"359","endLine":19,"endColumn":12,"suggestions":"368"},{"ruleId":"357","severity":1,"message":"369","line":222,"column":6,"nodeType":"359","endLine":222,"endColumn":12,"suggestions":"370"},{"ruleId":"357","severity":1,"message":"371","line":55,"column":6,"nodeType":"359","endLine":55,"endColumn":19,"suggestions":"372"},{"ruleId":"357","severity":1,"message":"373","line":63,"column":6,"nodeType":"359","endLine":63,"endColumn":12,"suggestions":"374"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'user'. Either include it or remove the dependency array.","ArrayExpression",["375"],"React Hook useEffect has a missing dependency: 'setNameService'. Either include it or remove the dependency array.",["376"],"React Hook useEffect has missing dependencies: 'setBasicNotificationContent' and 'setShowBasicNotification'. Either include them or remove the dependency array.",["377"],"React Hook useEffect has a missing dependency: 'setShowBasicNotification'. Either include it or remove the dependency array.",["378"],"React Hook useEffect has missing dependencies: 'setCapacity', 'setIdenticalAmount', and 'setTotalAmount'. Either include them or remove the dependency array.",["379"],"React Hook useEffect has a missing dependency: 'setPacketMode'. Either include it or remove the dependency array.",["380"],"React Hook useEffect has a missing dependency: 'setThreshold'. Either include it or remove the dependency array.",["381"],"React Hook useEffect has missing dependencies: 'setFloatEventPairs', 'setFloatEvents', 'setFloatGroup', and 'setThreshold'. Either include them or remove the dependency array.",["382"],{"desc":"383","fix":"384"},{"desc":"385","fix":"386"},{"desc":"387","fix":"388"},{"desc":"389","fix":"390"},{"desc":"391","fix":"392"},{"desc":"393","fix":"394"},{"desc":"395","fix":"396"},{"desc":"397","fix":"398"},"Update the dependencies array to be: [domainData, user]",{"range":"399","text":"400"},"Update the dependencies array to be: [setNameService]",{"range":"401","text":"402"},"Update the dependencies array to be: [setBasicNotificationContent, setShowBasicNotification]",{"range":"403","text":"404"},"Update the dependencies array to be: [setShowBasicNotification, showBasicNotification]",{"range":"405","text":"406"},"Update the dependencies array to be: [mode, setCapacity, setIdenticalAmount, setTotalAmount]",{"range":"407","text":"408"},"Update the dependencies array to be: [mode, setPacketMode]",{"range":"409","text":"410"},"Update the dependencies array to be: [floatEvents, setThreshold]",{"range":"411","text":"412"},"Update the dependencies array to be: [mode, setFloatEventPairs, setFloatEvents, setFloatGroup, setThreshold]",{"range":"413","text":"414"},[1063,1075],"[domainData, user]",[530,532],"[setNameService]",[1443,1445],"[setBasicNotificationContent, setShowBasicNotification]",[1388,1411],"[setShowBasicNotification, showBasicNotification]",[460,466],"[mode, setCapacity, setIdenticalAmount, setTotalAmount]",[5952,5958],"[mode, setPacketMode]",[2184,2197],"[floatEvents, setThreshold]",[2343,2349],"[mode, setFloatEventPairs, setFloatEvents, setFloatGroup, setThreshold]"]