"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[475],{7425:function(e,t,n){n.d(t,{Z:function(){return l}});var r=n(5893),i=n(5675),a=n.n(i),o=(n(7294),n(5023));function l(e){var t=e.tokenID,n=e.display,i=e.selectedTokens,l=e.setSelectedTokens,c=1==e.disabled,s=!(!i||!i[t]||1!=i[t].isSelected),f=(0,o.bY)(n.thumbnail),u=""!=f&&f?f:"/drizzle.png",d=n.extraData&&(n.extraData.rarityDesc||n.extraData.rarityScore)||!!["common","rare","epic","legendary"].includes(n.description)&&n.description,p=function(e){return"rare"==e?"text-blue-800 bg-blue-100":"epic"==e?"text-yellow-800 bg-yellow-100":"legendary"==e?"text-purple-800 bg-purple-100":"text-gray-800 bg-gray-100"}(d);return(0,r.jsxs)("div",{children:[(0,r.jsx)("div",{hidden:!0,className:"text-gray-800 bg-gray-100"}),(0,r.jsx)("div",{hidden:!0,className:"text-blue-800 bg-blue-100"}),(0,r.jsx)("div",{hidden:!0,className:"text-purple-800 bg-purple-100"}),(0,r.jsx)("div",{hidden:!0,className:"text-yellow-800 bg-yellow-100"}),(0,r.jsxs)("button",{className:(0,o.AK)(c?"w-[124px]":"w-[136px]",s?"ring-2 ring-drizzle-green":"ring-1 ring-black ring-opacity-5","bg-white h-52 rounded-2xl\n        flex flex-col gap-y-1 pb-2 justify-between items-center shrink-0\n        overflow-hidden shadow-md "),disabled:c,onClick:function(){if(!c){var e=Object.assign({},i);e[t]&&0!=e[t].isSelected?e[t]={isSelected:!1,selectedAt:0,display:n}:e[t]={isSelected:!0,selectedAt:(new Date).getTime(),display:n},l(e)}},children:[(0,r.jsx)("div",{className:"w-full aspect-square bg-drizzle-green-ultralight relative",children:(0,r.jsx)(a(),{src:u,alt:"",layout:"fill",priority:!0,objectFit:"cover"})}),(0,r.jsx)("label",{className:"px-3 max-h-12 overflow-hidden text-ellipsis font-flow font-semibold text-xs text-black",children:"".concat(n.name)}),(0,r.jsx)("label",{className:"px-3 font-flow font-medium text-xs text-gray-400",children:"#".concat(t)}),d?(0,r.jsx)("div",{className:"px-2 ".concat(p," rounded-full font-flow font-medium text-xs"),children:"".concat(d).toUpperCase()}):null]})]},t)}},5448:function(e,t,n){n.d(t,{Z:function(){return P}});var r=n(5893),i=n(5675),a=n.n(i),o=n(7294),l=n(5985),c=n(4480),s=n(5496),f=n(6365),u=n(5023),d=n(702),p=n(6335),m=n(456),b=n(4535),g=n(4051),h=n.n(g),y=(n(3776),n(8100)),x=n(9491),w=n(6887);function v(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}function I(e,t,n,r,i,a,o){try{var l=e[a](o),c=l.value}catch(s){return void n(s)}l.done?t(c):Promise.resolve(c).then(r,i)}function R(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){var n=null==e?null:"undefined"!==typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=n){var r,i,a=[],o=!0,l=!1;try{for(n=n.call(e);!(o=(r=n.next()).done)&&(a.push(r.value),!t||a.length!==t);o=!0);}catch(c){l=!0,i=c}finally{try{o||null==n.return||n.return()}finally{if(l)throw i}}return a}}(e,t)||function(e,t){if(!e)return;if("string"===typeof e)return v(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);"Object"===n&&e.constructor&&(n=e.constructor.name);if("Map"===n||"Set"===n)return Array.from(n);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return v(e,t)}(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}var A=function(e){if(!e)return!1;var t=e.availability.status.rawValue,n=e.eligibilityForRegistration.status.rawValue,r=e.eligibilityForClaim.status.rawValue;return"2"==t&&"0"==n||("3"==t||"4"==t)&&"1"==r};function D(e){var t,n=R((0,c.FV)(s.xr),2),i=n[0],a=n[1],o=R((0,c.FV)(s.cY),2)[1],l=(0,y.kY)().mutate,f=e.isPreview,d=e.raffle,p=e.host,m=e.user,b=e.nft,g=e.claimStatus,v=e.setShowClaimedModal,D=e.setShowRegisteredModal,C=e.setRewardInfo,N=f?b&&b.name:d.nftInfo&&d.nftInfo.name,k=function(e,t,n,r){var i={emoji:"\ud83c\udf89",description:"YOU WON",amount:"".concat(n," #ID"),title:"PREVIEWING"};if(r)return i;if(!e||!e.loggedIn)return i.emoji="\ud83d\udc40",i.description="CONECTE A CARTEIRA PARA VERIFICAR A ELEGIBILIDADE",i.amount=null,i.title="Conectar carteira",i;if(!t)return i.emoji="\u2753",i.description="UNKNOWN STATUS",i.amount=null,i.title="UNKNOWN",i;var a=t.availability.status.rawValue,o=t.eligibilityForRegistration.status.rawValue,l=t.eligibilityForClaim.status.rawValue,c=t.eligibilityForClaim.eligibleNFTs[0],s="".concat(n," #").concat(c);return"1"===a?(i.emoji="\u26d4\ufe0f",i.title="RAFFLE ENDED","5"==l?(i.description="YOU HAVE CLAIMED",i.amount=s):"1"==l?(i.description="YOU WON",i.amount=s):(i.description="NO LONGER AVAILABLE",i.amount=null)):"5"===a?(i.emoji="\u26d4\ufe0f",i.title="RAFFLE EXPIRED","5"==l?(i.description="YOU HAVE CLAIMED",i.amount=s):"1"==l?(i.description="YOU WON",i.amount=s):(i.description="NO LONGER AVAILABLE",i.amount=null)):"3"===a?"5"==l?(i.emoji="\ud83c\udf89",i.description="YOU HAVE CLAIMED",i.amount=s,i.title="HAVE CLAIMED"):"1"==l?(i.emoji="\ud83c\udf89",i.description="YOU WON",i.amount=s,i.title="CLAIM"):"3"==l&&"4"==o?(i.emoji="\ud83c\udfb2",i.description="MAY YOU BE THE WINNER",i.amount=null,i.title="RAFFLE DRAWING"):"0"==o?(i.emoji="\ud83e\udda5",i.description="YOU ARE LATE FOR REGISTRATION",i.title="TOO LATE",i.amount=null):(i.emoji="\ud83d\ude49",i.description="YOU ARE NOT ELIGIBLE",i.title="NOT ELIGIBLE",i.amount=null):"4"===a?"5"==l?(i.emoji="\ud83c\udf89",i.description="YOU HAVE CLAIMED",i.amount=s,i.title="HAVE CLAIMED"):"1"==l?(i.emoji="\ud83c\udf89",i.description="YOU WON",i.amount=s,i.title="CLAIM"):"3"==l&&"4"==o?(i.emoji="\ud83d\ude48",i.description="YOU ARE NOT WINNER",i.title="NOT WINNER",i.amount=null):"0"==o?(i.emoji="\ud83e\udda5",i.description="YOU ARE LATE FOR REGISTRATION",i.title="TOO LATE",i.amount=null):(i.emoji="\ud83d\ude49",i.description="YOU ARE NOT ELIGIBLE",i.title="NOT ELIGIBLE",i.amount=null):"0"===a?(i.emoji="\ud83d\udd59",i.description="DIDA DIDA ...",i.title="NOT STARTED YET",i.amount=null):"6"===a?(i.emoji="\u23f8\ufe0f",i.title="RAFFLE PAUSED","5"==l?(i.description="YOU HAVE CLAIMED",i.amount=s,i.description="YOU WON",i.amount=s):"3"==l&&("4"==o?(i.description="YOU HAVE REGISTERED",i.amount=null):"2"==o?(i.description="YOU ARE NOT ELIGIBLE",i.amount=null):"0"==o&&(i.description="YOU ARE ELIGIBLE",i.amount=null))):"2"===a&&("0"===o?(i.emoji="\u2705",i.description="YOU ARE ELIGIBLE",i.title="REGISTER NOW",i.amount=null):"2"===o?(i.emoji="\ud83d\ude49",i.description="YOU ARE NOT ELIGIBLE",i.title="NOT ELIGIBLE",i.amount=null):"4"===o&&(i.emoji="\u2705",i.description="YOU HAVE REGISTERED",i.title="COME BACK LATER",i.amount=null)),i}(m,g,N,f),S=k.emoji,E=k.description,M=k.amount,P=k.title;return(0,r.jsx)("div",{children:(0,r.jsxs)("div",{className:"flex flex-col bg-white text-black min-w-[240px] sm:max-w-[240px] min-h-[240px] justify-center ring-1 ring-black ring-opacity-5 rounded-3xl overflow-hidden p-5 shadow-drizzle ",children:[(0,r.jsx)("label",{className:"block w-full text-center text-[60px]",children:S}),(0,r.jsx)("label",{className:"block w-full mt-5 text-center text-lg font-semibold font-flow",children:E}),(0,r.jsx)("label",{className:"block w-full text-center mt-1 text-xl font-bold font-flow text-drizzle-green break-words",children:M}),(0,r.jsx)("button",{type:"button",className:(0,u.AK)(f||m&&m.loggedIn&&!A(g)?"bg-disabled-gray":i?"bg-drizzle-green-light":"bg-drizzle-green hover:bg-drizzle-green-dark","mt-5 h-[48px] text-base font-medium shadow-sm text-black rounded-2xl"),disabled:f||m&&m.loggedIn&&!A(g)||i,onClick:(t=h().mark((function e(){var t,n;return h().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(m&&m.loggedIn){e.next=3;break}return x.YR(),e.abrupt("return");case 3:if(!f&&A(g)&&d){e.next=5;break}return e.abrupt("return");case 5:if("2"!=g.availability.status.rawValue){e.next=12;break}return e.next=8,(0,w.z2)(d.raffleID,p.address,a,o);case 8:(t=e.sent)&&4===t.status&&0===t.statusCode&&t.events.find((function(e){return e.type.includes("RaffleRegistered")}))&&D(!0),e.next=17;break;case 12:if("3"!=g.availability.status.rawValue&&"4"!=g.availability.status.rawValue){e.next=17;break}return e.next=15,(0,w.QS)(d.raffleID,p.address,d.nftInfo,a,o);case 15:(n=e.sent)&&4===n.status&&0===n.statusCode&&n.events.find((function(e){return e.type.includes("RaffleClaimed")}))&&(C(M),v(!0));case 17:l(["raffleClaimStatusFetcher",d.raffleID,p.address,m&&m.addr]),l(["raffleFetcher",d.raffleID,p.address]);case 19:case"end":return e.stop()}}),e)})),function(){var e=this,n=arguments;return new Promise((function(r,i){var a=t.apply(e,n);function o(e){I(a,r,i,o,l,"next",e)}function l(e){I(a,r,i,o,l,"throw",e)}o(void 0)}))}),children:P})]})})}function C(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}function N(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){var n=null==e?null:"undefined"!==typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=n){var r,i,a=[],o=!0,l=!1;try{for(n=n.call(e);!(o=(r=n.next()).done)&&(a.push(r.value),!t||a.length!==t);o=!0);}catch(c){l=!0,i=c}finally{try{o||null==n.return||n.return()}finally{if(l)throw i}}return a}}(e,t)||function(e,t){if(!e)return;if("string"===typeof e)return C(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);"Object"===n&&e.constructor&&(n=e.constructor.name);if("Map"===n||"Set"===n)return Array.from(n);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return C(e,t)}(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}var k=o.memo((function(e){var t=e.banner;return(0,r.jsx)("div",{className:"w-full h-[240px] bg-drizzle-green relative",children:(0,r.jsx)(a(),{src:t,alt:"",layout:"fill",objectFit:"cover"})})}));k.displayName="MemozieBanner";var S=o.memo((function(e){var t=e.name,n=e.url;return(0,r.jsx)("div",{className:"w-full mb-2",children:n?(0,r.jsxs)("a",{href:n,target:"_blank",rel:"noopener noreferrer",className:"text-black text-3xl font-bold font-flow break-words underline decoration-drizzle-green decoration-2",children:[t,(0,r.jsx)("span",{className:"inline-flex items-baseline",children:(0,r.jsx)(f.Z,{className:"h-5 w-5 text-drizzle-green"})})]}):(0,r.jsx)("label",{className:"text-black text-2xl font-bold font-flow break-words",children:t})})}));S.displayName="MemoizeName";var E=o.memo((function(e){var t=e.nameService,n=e.host,i=e.createdAt,a=e.nft,o=e.eligibilityMode,c=e.raffle;return(0,r.jsxs)("div",{className:"w-full flex flex-col -mt-3",children:[(0,r.jsx)(b.Z,{info:{raffle:c,type:"RAFFLE",eligibilityMode:o,nft:a}}),(0,r.jsxs)("label",{className:"w-full font-flow text-sm text-gray-400 break-words",children:["Created by ",(0,r.jsx)("span",{children:(0,r.jsx)("a",{href:"".concat(l.Z.appURL,"/").concat("string"==typeof n?n:n.address),target:"_blank",rel:"noopener noreferrer",className:"text-black underline decoration-drizzle-green decoration-2",children:"string"==typeof n?n:(0,u.fw)(n,t)})})]}),(0,r.jsx)("label",{className:"w-full font-flow text-sm text-gray-400 break-words",children:"Created at ".concat(i.toLocaleString())})]})}));E.displayName="MemoizeBasicInfo";var M=o.memo((function(e){var t=e.description;return(0,r.jsx)("div",{className:"w-full mb-10",children:(0,r.jsx)("p",{className:"w-full font-flow text-base break-words whitespace-pre-wrap",children:t})})}));function P(e){var t=N((0,c.FV)(s.xr),2),n=(t[0],t[1],N((0,c.FV)(s.cY),2)[1],N((0,c.FV)(s.$F),1)[0]),i=1==e.isPreview,a=e.setShowClaimedModal,o=e.setShowRegisteredModal,f=e.setRewardInfo,b=e.raffle,g=e.claimStatus,h=e.user,y=e.nft,x=(e.selectedTokens,e.eligibilityMode),w=e.floatGroup,v=e.floatEventPairs,I=e.threshold,R=b&&b.raffleID||e.raffleID,A=b&&b.name||e.name,C=b&&b.host||e.host,P=b&&b.description||e.description,T=b&&b.url||e.url,j=b&&b.image||e.banner,F=(0,u.TH)(b&&b.registrationEndAt||e.registrationEndAt),O=(0,u.TH)(b&&b.createdAt||e.createdAt),z=(0,u.TH)(b&&b.startAt||e.startAt),U=(0,u.TH)(b&&b.endAt||e.endAt);return(0,r.jsxs)("div",{className:"w-full justify-center flex flex-col gap-y-8 mt-2 mb-2 sm:flex-row sm:gap-x-8 text-black",children:[(0,r.jsxs)("div",{className:"flex flex-col shadow-drizzle bg-white ring-1 ring-black ring-opacity-5 items-stretch rounded-3xl overflow-hidden grow sm:min-w-[320px] md:w-[480px]",children:[(0,r.jsx)(k,{banner:j||"/banner.png"}),(0,r.jsxs)("div",{className:"flex flex-col p-5 sm:p-8 gap-y-5",children:[(0,r.jsx)(S,{name:A,url:T}),(0,r.jsx)(E,{nameService:n,host:C,createdAt:O,nft:y,eligibilityMode:x,raffle:b}),z||U||F?(0,r.jsx)(m.Z,{startAt:z,endAt:U,registrationEndAt:F}):null,(0,r.jsx)(M,{description:P})]})]}),(0,r.jsxs)("div",{className:"flex flex-col gap-y-8",children:[(0,r.jsx)(p.Z,{type:"Raffle",raffle:b,eligibilityMode:x,floatGroup:w,floatEventPairs:v,threshold:I}),(0,r.jsx)(D,{isPreview:i,claimStatus:g,raffle:b,host:C,nft:y,user:h,setShowClaimedModal:a,setShowRegisteredModal:o,setRewardInfo:f}),R&&C?(0,r.jsx)(d.Z,{url:"".concat(l.Z.appURL,"/").concat(C.address,"/raffles/").concat(R)}):(0,r.jsx)(d.Z,{disabled:!0,url:"".concat(l.Z.appURL,"/create/ft_raffle")})]})]})}M.displayName="MemoizeDescription"},1214:function(e,t,n){n.d(t,{Z:function(){return a}});var r=n(5893),i=n(5985);function a(e){var t=e.isPreview,n=e.raffle,a=e.draft,o=t?function(e){var t="border-drizzle-green";return[{title:"NFT",content:"".concat(e.nftInfo.name),color:t,link:"".concat(i.Z.flowscanURL,"/contract/A.").concat(e.nftInfo.contractAddress.replace("0x",""),".").concat(e.nftInfo.contractName)},{title:"# of Registrants",content:"0",color:t,link:null},{title:"Winners (Drawn / Total)",content:"0 / ".concat(e.numberOfWinners),color:t,link:null}]}(a):n?function(e){var t="border-drizzle-green";return[{title:"NFT",content:"".concat(e.nftInfo.name),color:t,link:"".concat(i.Z.flowscanURL,"/contract/A.").concat(e.nftInfo.contractAddress.replace("0x",""),".").concat(e.nftInfo.contractName)},{title:"# of Registrants",content:"".concat(Object.keys(e.registrationRecords).length),color:t,link:null},{title:"Winners (Drawn / Total)",content:"".concat(Object.keys(e.winners).length," / ").concat(e.numberOfWinners),color:t,link:null}]}(n):[];return(0,r.jsxs)("div",{className:"w-full flex flex-col",children:[(0,r.jsx)("label",{className:"px-3 text-2xl font-bold font-flow",children:"DATA"}),(0,r.jsx)("div",{className:"w-full flex flex-col mt-4 mb-10 justify-center gap-y-3 items-stretch sm:flex-row sm:gap-x-3",children:o.length>0?o.map((function(e,t){return(0,r.jsx)("div",{className:"w-full",children:e.link?(0,r.jsx)("a",{href:e.link,target:"_blank",rel:"noopener noreferrer",children:(0,r.jsxs)("div",{className:"cursor-pointer h-full w-full rounded-2xl ring-1 ring-black ring-opacity-5 overflow-hidden ".concat(e.color," flex flex-col bg-white px-5 pt-5 pb-10 gap-y-1 shadow"),children:[(0,r.jsx)("label",{className:"cursor-pointer text-sm font-medium text-gray-500 font-flow",children:e.title}),(0,r.jsx)("label",{className:"cursor-pointer text-2xl font-bold font-flow text-drizzle-green",children:e.content})]},t)}):(0,r.jsxs)("div",{className:"h-full w-full rounded-2xl ring-1 ring-black ring-opacity-5 overflow-hidden ".concat(e.color," flex flex-col bg-white px-5 pt-5 pb-10 gap-y-1 shadow"),children:[(0,r.jsx)("label",{className:"text-sm font-medium text-gray-500 font-flow",children:e.title}),(0,r.jsx)("label",{className:"text-2xl font-bold font-flow text-drizzle-green",children:e.content})]},t)},"".concat(t,"-div"))})):null})]})}},4749:function(e,t,n){n.d(t,{Z:function(){return c}});var r=n(5893),i=n(7425);function a(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}function o(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){var n=null==e?null:"undefined"!==typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=n){var r,i,a=[],o=!0,l=!1;try{for(n=n.call(e);!(o=(r=n.next()).done)&&(a.push(r.value),!t||a.length!==t);o=!0);}catch(c){l=!0,i=c}finally{try{o||null==n.return||n.return()}finally{if(l)throw i}}return a}}(e,t)||function(e,t){if(!e)return;if("string"===typeof e)return a(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);"Object"===n&&e.constructor&&(n=e.constructor.name);if("Map"===n||"Set"===n)return Array.from(n);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return a(e,t)}(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}var l={UNDRAWN:{title:"UNDRAWN",style:"text-gray-800 bg-gray-100"},DRAWN:{title:"DRAWN",style:"text-yellow-800 bg-yellow-100"},CLAIMED:{title:"CLAIMED",style:"text-green-800 bg-green-100"}};function c(e){var t=e.isPreview,n=e.raffle,a=e.draft,c=t?function(e){var t=Object.assign({},e.rewardDisplays),n=!0,r=!1,i=void 0;try{for(var a,c=Object.entries(t)[Symbol.iterator]();!(n=(a=c.next()).done);n=!0){var s=o(a.value,2)[1];s.status||(s.status=l.UNDRAWN)}}catch(f){r=!0,i=f}finally{try{n||null==c.return||c.return()}finally{if(r)throw i}}return t}(a):n?function(e){var t=Object.assign({},e.rewardDisplays),n=!0,r=!1,i=void 0;try{for(var a,c=Object.entries(e.winners)[Symbol.iterator]();!(n=(a=c.next()).done);n=!0){var s=o(a.value,2)[1];t[s.rewardTokenIDs[0]].status=s.isClaimed?l.CLAIMED:l.DRAWN}}catch(g){r=!0,i=g}finally{try{n||null==c.return||c.return()}finally{if(r)throw i}}var f=!0,u=!1,d=void 0;try{for(var p,m=Object.entries(t)[Symbol.iterator]();!(f=(p=m.next()).done);f=!0){var b=o(p.value,2)[1];b.status||(b.status=l.UNDRAWN),0==b.name.length&&(b.name="".concat(e.nftInfo.contractName," #").concat(b.tokenID))}}catch(g){u=!0,d=g}finally{try{f||null==m.return||m.return()}finally{if(u)throw d}}return t}(n):[];return(0,r.jsxs)("div",{className:"w-full flex flex-col",children:[(0,r.jsx)("div",{hidden:!0,className:"text-green-800 bg-green-100"}),(0,r.jsx)("div",{hidden:!0,className:"text-gray-800 bg-gray-100"}),(0,r.jsx)("div",{hidden:!0,className:"text-yellow-800 bg-yellow-100"}),(0,r.jsx)("label",{className:"px-3 text-2xl font-bold font-flow",children:"REWARDS"}),Object.keys(c).length>0?(0,r.jsx)("div",{className:"\n          ring-1 ring-black ring-opacity-5\n          p-3 bg-white shadow rounded-3xl mt-4 mb-10 grid grid-rows-1 grid-flow-col gap-3 sm:gap-5 justify-start w-full overflow-auto sm:max-h-[450px]\n        ",children:Object.entries(c).sort((function(e,t){var n=o(e,1)[0];return o(t,1)[0]-n})).map((function(e){var t=o(e,2),n=t[0],a=t[1];return(0,r.jsxs)("div",{className:"flex flex-col gap-y-2 items-center",children:[(0,r.jsx)(i.Z,{disabled:!0,tokenID:n,display:a},n),(0,r.jsx)("label",{className:"rounded-full px-2 text-xs font-semibold leading-6 ".concat(a.status.style),children:a.status.title},"".concat(n,"-label"))]},"".concat(n,"-div"))}))}):null]})}},4410:function(e,t,n){n.d(t,{B7:function(){return m},DO:function(){return g},i0:function(){return b},ib:function(){return p}});var r=n(4051),i=n.n(r),a=n(5985),o=n(9491),l=n(5023);function c(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}function s(e,t,n,r,i,a,o){try{var l=e[a](o),c=l.value}catch(s){return void n(s)}l.done?t(c):Promise.resolve(c).then(r,i)}function f(e){return function(){var t=this,n=arguments;return new Promise((function(r,i){var a=e.apply(t,n);function o(e){s(a,r,i,o,l,"next",e)}function l(e){s(a,r,i,o,l,"throw",e)}o(void 0)}))}}function u(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){var n=null==e?null:"undefined"!==typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=n){var r,i,a=[],o=!0,l=!1;try{for(n=n.call(e);!(o=(r=n.next()).done)&&(a.push(r.value),!t||a.length!==t);o=!0);}catch(c){l=!0,i=c}finally{try{o||null==n.return||n.return()}finally{if(l)throw i}}return a}}(e,t)||function(e,t){if(!e)return;if("string"===typeof e)return c(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);"Object"===n&&e.constructor&&(n=e.constructor.name);if("Map"===n||"Set"===n)return Array.from(n);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return c(e,t)}(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}var d="0xMist",p=function(){var e=f(i().mark((function e(t,n){var r,a,c,s,f,d;return i().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r=u((0,l.xg)(n.collectionType.restrictions),2),a=r[0],c=r[1],s='\n  pub struct NFTDisplay {\n    pub let tokenID: UInt64\n    pub let name: String\n    pub let description: String\n    pub let thumbnail: String\n    pub let extraData: {String: AnyStruct}\n\n    init(tokenID: UInt64, name: String, description: String, thumbnail: String, extraData: {String: AnyStruct}) {\n      self.tokenID = tokenID\n      self.name = name\n      self.description = description\n      self.thumbnail = thumbnail\n      self.extraData = extraData\n    }\n  }\n\n  pub fun main(account: Address): {UInt64: NFTDisplay} {\n      let NFTs: {UInt64: NFTDisplay} = {}\n      let owner = getAuthAccount(account)\n      let tempPathStr = "drizzleTempPath"\n      let tempPublicPath = PublicPath(identifier: tempPathStr)!\n      owner.link<&{MetadataViews.ResolverCollection}>(\n              tempPublicPath,\n              target: '.concat(n.collectionStoragePath,'\n      )\n\n      if let collection = owner.getCapability<&{MetadataViews.ResolverCollection}>(tempPublicPath).borrow() {\n          for tokenID in collection.getIDs() {\n              let resolver = collection.borrowViewResolver(id: tokenID)\n              if let display = MetadataViews.getDisplay(resolver) {\n                  var name = display.name\n                  if name.length == 0 {\n                    name = "').concat(n.contractName,' #".concat(tokenID.toString())\n                  }\n                  NFTs[tokenID] = NFTDisplay(\n                    tokenID: tokenID,\n                    name: name,\n                    description: display.description,\n                    thumbnail: display.thumbnail.uri(),\n                    extraData: {}\n                  )\n              }\n          }\n      }\n\n      return NFTs\n  }\n  '),"FlovatarComponent"!=n.contractName&&"TopShot"!=n.contractName&&"Flovatar"!=n.contractName||(s='\n    pub struct NFTDisplay {\n      pub let tokenID: UInt64\n      pub let name: String\n      pub let description: String\n      pub let thumbnail: String\n      pub let extraData: {String: AnyStruct}\n  \n      init(tokenID: UInt64, name: String, description: String, thumbnail: String, extraData: {String: AnyStruct}) {\n        self.tokenID = tokenID\n        self.name = name\n        self.description = description\n        self.thumbnail = thumbnail\n        self.extraData = extraData\n      }\n    }\n  \n    pub fun main(account: Address): {UInt64: NFTDisplay} {\n        let NFTs: {UInt64: NFTDisplay} = {}\n        let owner = getAuthAccount(account)\n        let tempPathStr = "drizzleTempPath"\n        let tempPublicPath = PublicPath(identifier: tempPathStr)!\n        owner.link<&{MetadataViews.ResolverCollection}>(\n                tempPublicPath,\n                target: '.concat(n.collectionStoragePath,'\n        )\n  \n        if let collection = owner.getCapability<&{MetadataViews.ResolverCollection}>(tempPublicPath).borrow() {\n            for tokenID in collection.getIDs() {\n                let resolver = collection.borrowViewResolver(id: tokenID)\n                let extraData: {String: AnyStruct} = {}\n                if let rarity = MetadataViews.getRarity(resolver) {\n                  if let description = rarity.description {\n                    extraData["rarityDesc"] = rarity.description\n                  }\n                }\n\n                if let display = MetadataViews.getDisplay(resolver) {\n                    var name = display.name\n                    if name.length == 0 {\n                      name = "').concat(n.contractName,' #".concat(tokenID.toString())\n                    }\n                    NFTs[tokenID] = NFTDisplay(\n                      tokenID: tokenID,\n                      name: name,\n                      description: display.description,\n                      thumbnail: display.thumbnail.uri(),\n                      extraData: extraData\n                    )\n                }\n            }\n        }\n  \n        return NFTs\n    }\n    ')),"FLOAT"==n.contractName&&(s="\n    pub struct NFTDisplay {\n      pub let tokenID: UInt64\n      pub let name: String\n      pub let description: String\n      pub let thumbnail: String\n      pub let extraData: {String: AnyStruct}\n  \n      init(tokenID: UInt64, name: String, description: String, thumbnail: String, extraData: {String: AnyStruct}) {\n        self.tokenID = tokenID\n        self.name = name\n        self.description = description\n        self.thumbnail = thumbnail\n        self.extraData = extraData\n      }\n    }\n  \n    pub fun main(account: Address): {UInt64: NFTDisplay} {\n        let NFTs: {UInt64: NFTDisplay} = {}\n  \n        if let collection = getAccount(account).getCapability(".concat(n.collectionPublicPath,").borrow<&{").concat(c,"}>() {\n          for tokenID in collection.getIDs() {\n            if collection.borrowFLOAT(id: tokenID)!.getEventMetadata()?.transferrable == true {\n                let resolver = collection.borrowViewResolver(id: tokenID)\n                if let display = MetadataViews.getDisplay(resolver) {\n                    NFTs[tokenID] = NFTDisplay(\n                        tokenID: tokenID,\n                        name: display.name,\n                        description: display.description,\n                        thumbnail: display.thumbnail.uri(),\n                        extraData: {}\n                    )\n                }\n            }\n          }\n        }\n        return NFTs\n    }\n    ")),f=a.concat(s),e.next=7,o.IO({cadence:f,args:function(e,n){return[e(t,n.Address)]}});case 7:return d=e.sent,e.abrupt("return",d);case 9:case"end":return e.stop()}}),e)})));return function(t,n){return e.apply(this,arguments)}}(),m=function(){var e=f(i().mark((function e(t,n,r){var l,c;return i().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return l='\n  import Mist from 0xMist\n\n  pub struct ClaimStatus {\n      pub let availability: Mist.Availability\n      pub let eligibilityForRegistration: Mist.Eligibility\n      pub let eligibilityForClaim: Mist.Eligibility\n  \n      init(\n          availability: Mist.Availability,\n          eligibilityForRegistration: Mist.Eligibility,\n          eligibilityForClaim: Mist.Eligibility\n      ) {\n          self.availability = availability\n          self.eligibilityForRegistration = eligibilityForRegistration\n          self.eligibilityForClaim = eligibilityForClaim\n      }\n  }\n  \n  pub fun main(raffleID: UInt64, host: Address, claimer: Address): ClaimStatus {\n      let raffleCollection =\n          getAccount(host)\n          .getCapability(Mist.RaffleCollectionPublicPath)\n          .borrow<&Mist.RaffleCollection{Mist.IRaffleCollectionPublic}>()\n          ?? panic("Could not borrow IRaffleCollectionPublic from address")\n  \n      let raffle = raffleCollection.borrowPublicRaffleRef(raffleID: raffleID)\n          ?? panic("Could not borrow raffle")\n  \n      let availability = raffle.checkAvailability(params: {})\n      let eligibilityR = raffle.checkRegistrationEligibility(account: claimer, params: {})\n      let eligibilityC = raffle.checkClaimEligibility(account: claimer, params: {})\n  \n      return ClaimStatus(\n          availability: availability,\n          eligibilityForRegistration: eligibilityR,\n          eligibilityForClaim: eligibilityC\n      )\n  }\n  '.replace(d,a.Z.mistAddress),e.next=3,o.IO({cadence:l,args:function(e,i){return[e(t,i.UInt64),e(n,i.Address),e(r,i.Address)]}});case 3:return c=e.sent,e.abrupt("return",c);case 5:case"end":return e.stop()}}),e)})));return function(t,n,r){return e.apply(this,arguments)}}(),b=function(){var e=f(i().mark((function e(t,n){var r,l;return i().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r='\n  import Mist from 0xMist\n\n  pub fun main(raffleID: UInt64, host: Address): &{Mist.IRafflePublic} {\n      let raffleCollection =\n          getAccount(host)\n          .getCapability(Mist.RaffleCollectionPublicPath)\n          .borrow<&Mist.RaffleCollection{Mist.IRaffleCollectionPublic}>()\n          ?? panic("Could not borrow IRaffleCollectionPublic from address")\n  \n      let raffleRef = raffleCollection.borrowPublicRaffleRef(raffleID: raffleID)\n          ?? panic("Could not borrow raffle")\n  \n      return raffleRef\n  }\n  '.replace(d,a.Z.mistAddress),e.next=3,o.IO({cadence:r,args:function(e,r){return[e(t,r.UInt64),e(n,r.Address)]}});case 3:return l=e.sent,e.abrupt("return",l);case 5:case"end":return e.stop()}}),e)})));return function(t,n){return e.apply(this,arguments)}}(),g=function(){var e=f(i().mark((function e(t){var n,r;return i().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n="\n  import Mist from 0xMist\n\n  pub fun main(account: Address): {UInt64: &{Mist.IRafflePublic}} {\n      let raffleCollection =\n          getAccount(account)\n          .getCapability(Mist.RaffleCollectionPublicPath)\n          .borrow<&Mist.RaffleCollection{Mist.IRaffleCollectionPublic}>()\n  \n      if let collection = raffleCollection {\n          return collection.getAllRaffles()\n      }\n  \n      return {}\n  }\n  ".replace(d,a.Z.mistAddress),e.next=3,o.IO({cadence:n,args:function(e,n){return[e(t,n.Address)]}});case 3:return r=e.sent,e.abrupt("return",null!==r&&void 0!==r?r:[]);case 5:case"end":return e.stop()}}),e)})));return function(t){return e.apply(this,arguments)}}()},6887:function(e,t,n){n.d(t,{DE:function(){return N},QS:function(){return E},eK:function(){return w},ii:function(){return I},mU:function(){return C},ni:function(){return g},oB:function(){return A},z2:function(){return y}});var r=n(4051),i=n.n(r),a=n(5985),o=n(9491),l=n(4266),c=n(5023);function s(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}function f(e,t,n,r,i,a,o){try{var l=e[a](o),c=l.value}catch(s){return void n(s)}l.done?t(c):Promise.resolve(c).then(r,i)}function u(e){return function(){var t=this,n=arguments;return new Promise((function(r,i){var a=e.apply(t,n);function o(e){f(a,r,i,o,l,"next",e)}function l(e){f(a,r,i,o,l,"throw",e)}o(void 0)}))}}function d(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){var n=null==e?null:"undefined"!==typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=n){var r,i,a=[],o=!0,l=!1;try{for(n=n.call(e);!(o=(r=n.next()).done)&&(a.push(r.value),!t||a.length!==t);o=!0);}catch(c){l=!0,i=c}finally{try{o||null==n.return||n.return()}finally{if(l)throw i}}return a}}(e,t)||function(e,t){if(!e)return;if("string"===typeof e)return s(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);"Object"===n&&e.constructor&&(n=e.constructor.name);if("Map"===n||"Set"===n)return Array.from(n);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return s(e,t)}(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}var p="0xNonFungibleToken",m="0xMist",b="0xDrizzleRecorder",g=function(){var e=u(i().mark((function e(t,n,r,a,o,c,s,f,d,p,m,b,g,y,x,w,v,I,R,A,D,C,N,k,S,E,M,P,T){var j;return i().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return j=function(){var e=u(i().mark((function e(){return i().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,h(t,n,r,a,o,c,s,f,d,p,m,b,g,y,x,w,v,I,R,A,D,C,N,k,S,E,M);case 2:return e.abrupt("return",e.sent);case 3:case"end":return e.stop()}}),e)})));return function(){return e.apply(this,arguments)}}(),e.next=3,(0,l.Z)(j,P,T);case 3:return e.abrupt("return",e.sent);case 4:case"end":return e.stop()}}),e)})));return function(t,n,r,i,a,o,l,c,s,f,u,d,p,m,b,g,h,y,x,w,v,I,R,A,D,C,N,k,S){return e.apply(this,arguments)}}(),h=function(){var e=u(i().mark((function e(t,n,r,l,c,s,f,u,d,p,b,g,h,y,x,w,v,I,R,A,D,C,N,k,S,E,M){var P,T;return i().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return P="\n  import Mist from 0xMist\n  import EligibilityVerifiers from 0xEligibilityVerifiers\n  import ".concat(b," from ").concat(g,"\n  import MetadataViews from 0xMetadataViews\n  \n  transaction(\n      name: String,\n      description: String,\n      image: String?,\n      url: String?,\n      startAt: UFix64?,\n      endAt: UFix64?,\n      registrationEndAt: UFix64,\n      numberOfWinners: UInt64,\n      // NFTInfo\n      nftName: String,\n      nftTypeIdentifier: String,\n      nftContractName: String,\n      nftContractAddress: Address,\n      nftCollectionTypeIdentifier: String,\n      nftCollectionTypeRestrictions: [String],\n      nftCollectionLogoURL: String,\n      nftCollectionPublicPath: String,\n      nftCollectionStoragePath: String,\n  \n      rewardTokenIDs: [UInt64],\n      // EligibilityVerifier\n      // Only support registrationVerify now\n      withWhitelist: Bool,\n      whitelist: {Address: Bool},\n  \n      withFloats: Bool,\n      threshold: UInt32?,\n      eventIDs: [UInt64],\n      eventHosts: [Address],\n  \n      withFloatGroup: Bool,\n      floatGroupName: String?,\n      floatGroupHost: Address?\n  ) {\n      let raffleCollection: &Mist.RaffleCollection\n      let nftCollectionRef: &").concat(b,'.Collection\n      let rewardDisplays: {UInt64: Mist.NFTDisplay}\n  \n      prepare(acct: AuthAccount) {\n          if acct.borrow<&Mist.RaffleCollection>(from: Mist.RaffleCollectionStoragePath) == nil {\n              acct.save(<- Mist.createEmptyRaffleCollection(), to: Mist.RaffleCollectionStoragePath)\n              let cap = acct.link<&Mist.RaffleCollection{Mist.IRaffleCollectionPublic}>(\n                  Mist.RaffleCollectionPublicPath,\n                  target: Mist.RaffleCollectionStoragePath\n              ) ?? panic("Could not link RaffleCollection to PublicPath")\n          }\n  \n          self.raffleCollection = acct.borrow<&Mist.RaffleCollection>(from: Mist.RaffleCollectionStoragePath)\n              ?? panic("Could not borrow RaffleCollection from signer")\n  \n          let nftStoragePath = StoragePath(identifier: nftCollectionStoragePath)!\n          self.nftCollectionRef = acct.borrow<&').concat(b,'.Collection>(from: nftStoragePath)\n              ?? panic("Could not borrow collection from signer")\n  \n          self.rewardDisplays = {}\n          for tokenID in rewardTokenIDs {\n              let resolver = self.nftCollectionRef.borrowViewResolver(id: tokenID)\n              let mDisplay = MetadataViews.getDisplay(resolver)!\n              // Mist.NFTDisplay has no extraData field, we put rarity desc to description temporarily\n              var desc = mDisplay.description\n              if let mRarity = MetadataViews.getRarity(resolver) {\n                  if let rarityDesc = mRarity.description {\n                      desc = rarityDesc\n                  }\n              }\n              let display = Mist.NFTDisplay(\n                  tokenID: tokenID,\n                  name: mDisplay.name,\n                  description: desc,\n                  thumbnail: mDisplay.thumbnail.uri()\n              )\n              self.rewardDisplays[tokenID] = display\n          } \n      }\n  \n      execute {\n          assert(UInt64(rewardTokenIDs.length) >= numberOfWinners, message: "reward number is not enough")\n  \n          let nftInfo = Mist.NFTInfo(\n              name: nftName,\n              nftType: CompositeType(nftTypeIdentifier)!,\n              contractName: nftContractName,\n              contractAddress: nftContractAddress,\n              collectionType: RestrictedType(\n                  identifier: nftCollectionTypeIdentifier,\n                  restrictions: nftCollectionTypeRestrictions\n              )!,\n              collectionLogoURL: nftCollectionLogoURL,\n              collectionStoragePath: StoragePath(identifier: nftCollectionStoragePath)!,\n              collectionPublicPath: PublicPath(identifier: nftCollectionPublicPath)!\n          )\n          \n          var verifier: {EligibilityVerifiers.IEligibilityVerifier}? = nil\n          if withWhitelist {\n              verifier = EligibilityVerifiers.Whitelist(\n                  whitelist: whitelist\n              )\n          } else if withFloats {\n              assert(eventIDs.length == eventHosts.length, message: "eventIDs should have the same length with eventHosts")\n              let events: [EligibilityVerifiers.FLOATEventData] = []\n              var counter = 0\n              while counter < eventIDs.length {\n                  let event = EligibilityVerifiers.FLOATEventData(host: eventHosts[counter], eventID: eventIDs[counter])\n                  events.append(event)\n                  counter = counter + 1\n              }\n              verifier = EligibilityVerifiers.FLOATsV2(\n                  events: events,\n                  mintedBefore: getCurrentBlock().timestamp,\n                  threshold: threshold!\n              )\n          } else if withFloatGroup {\n              let groupData = EligibilityVerifiers.FLOATGroupData(\n                  host: floatGroupHost!,\n                  name: floatGroupName!\n              )\n              verifier = EligibilityVerifiers.FLOATGroupV2(\n                  group: groupData,\n                  mintedBefore: getCurrentBlock().timestamp,\n                  threshold: threshold!\n              )\n          } else {\n              panic("invalid verifier")\n          }\n  \n          let collection <- ').concat(b,".createEmptyCollection()\n          let raffleID = self.raffleCollection.createRaffle(\n              name: name, \n              description: description, \n              host: self.nftCollectionRef.owner!.address, \n              image: image,\n              url: url,\n              startAt: startAt,\n              endAt: endAt,\n              registrationEndAt: registrationEndAt,\n              numberOfWinners: numberOfWinners,\n              nftInfo: nftInfo,\n              collection: <- collection,\n              registrationVerifyMode: EligibilityVerifiers.VerifyMode.all,\n              claimVerifyMode: EligibilityVerifiers.VerifyMode.all,\n              registrationVerifiers: [verifier!],\n              claimVerifiers: [],\n              extraData: {}\n          )\n  \n          let raffle = self.raffleCollection.borrowRaffleRef(raffleID: raffleID)!\n          for tokenID in rewardTokenIDs {\n              let token <- self.nftCollectionRef.withdraw(withdrawID: tokenID)\n              let display = self.rewardDisplays[tokenID]!\n              raffle.deposit(token: <- token, display: display)\n          }\n      }\n  }\n    ").replace(m,a.Z.mistAddress).replace("0xEligibilityVerifiers",a.Z.eligibilityVerifiersAddress).replace("0xMetadataViews",a.Z.metadataViewsAddress),e.next=3,o.JG({cadence:P,args:function(e,i){return[e(t,i.String),e(n,i.String),e(r,i.Optional(i.String)),e(l,i.Optional(i.String)),e(c,i.Optional(i.UFix64)),e(s,i.Optional(i.UFix64)),e(f,i.UFix64),e(u,i.UInt64),e(d,i.String),e(p,i.String),e(b,i.String),e(g,i.Address),e(h,i.String),e(y,i.Array(i.String)),e(x,i.String),e(w,i.String),e(v,i.String),e(I,i.Array(i.UInt64)),e(R,i.Bool),e(A,i.Dictionary({key:i.Address,value:i.Bool})),e(D,i.Bool),e(C,i.Optional(i.UInt32)),e(N,i.Array(i.UInt64)),e(k,i.Array(i.Address)),e(S,i.Bool),e(E,i.Optional(i.String)),e(M,i.Optional(i.Address))]},proposer:o.ar,payer:o.ar,limit:9999});case 3:return T=e.sent,e.abrupt("return",T);case 5:case"end":return e.stop()}}),e)})));return function(t,n,r,i,a,o,l,c,s,f,u,d,p,m,b,g,h,y,x,w,v,I,R,A,D,C,N){return e.apply(this,arguments)}}(),y=function(){var e=u(i().mark((function e(t,n,r,a){var o;return i().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return o=function(){var e=u(i().mark((function e(){return i().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,x(t,n);case 2:return e.abrupt("return",e.sent);case 3:case"end":return e.stop()}}),e)})));return function(){return e.apply(this,arguments)}}(),e.next=3,(0,l.Z)(o,r,a);case 3:return e.abrupt("return",e.sent);case 4:case"end":return e.stop()}}),e)})));return function(t,n,r,i){return e.apply(this,arguments)}}(),x=function(){var e=u(i().mark((function e(t,n){var r,l;return i().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r='\n  import NonFungibleToken from 0xNonFungibleToken\n  import Mist from 0xMist\n  import DrizzleRecorder from 0xDrizzleRecorder\n  \n  transaction(raffleID: UInt64, host: Address) {\n      let raffle: &{Mist.IRafflePublic}\n      let address: Address\n      let recorderRef: &DrizzleRecorder.Recorder\n  \n      prepare(acct: AuthAccount) {\n          self.address = acct.address\n  \n          let raffleCollection = getAccount(host)\n              .getCapability(Mist.RaffleCollectionPublicPath)\n              .borrow<&Mist.RaffleCollection{Mist.IRaffleCollectionPublic}>()\n              ?? panic("Could not borrow the public RaffleCollection from the host")\n          \n          let raffle = raffleCollection.borrowPublicRaffleRef(raffleID: raffleID)\n              ?? panic("Could not borrow the public Raffle from the collection")\n\n          if (acct.borrow<&DrizzleRecorder.Recorder>(from: DrizzleRecorder.RecorderStoragePath) == nil) {\n              acct.save(<-DrizzleRecorder.createEmptyRecorder(), to: DrizzleRecorder.RecorderStoragePath)\n  \n              acct.link<&{DrizzleRecorder.IRecorderPublic}>(\n                  DrizzleRecorder.RecorderPublicPath,\n                  target: DrizzleRecorder.RecorderStoragePath\n              )\n            }\n  \n          self.raffle = raffle \n          self.recorderRef = acct\n            .borrow<&DrizzleRecorder.Recorder>(from: DrizzleRecorder.RecorderStoragePath)\n            ?? panic("Could not borrow Recorder")\n      }\n  \n      execute {\n        self.raffle.register(account: self.address, params: {\n          "recorderRef": self.recorderRef\n        })\n      }\n  }\n    '.replace(m,a.Z.mistAddress).replace(p,a.Z.nonFungibleTokenAddress).replace(b,a.Z.drizzleRecorderAddress),e.next=3,o.JG({cadence:r,args:function(e,r){return[e(t,r.UInt64),e(n,r.Address)]},proposer:o.ar,payer:o.ar,limit:9999});case 3:return l=e.sent,e.abrupt("return",l);case 5:case"end":return e.stop()}}),e)})));return function(t,n){return e.apply(this,arguments)}}(),w=function(){var e=u(i().mark((function e(t,n,r){var a;return i().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return a=function(){var e=u(i().mark((function e(){return i().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,v(t);case 2:return e.abrupt("return",e.sent);case 3:case"end":return e.stop()}}),e)})));return function(){return e.apply(this,arguments)}}(),e.next=3,(0,l.Z)(a,n,r);case 3:return e.abrupt("return",e.sent);case 4:case"end":return e.stop()}}),e)})));return function(t,n,r){return e.apply(this,arguments)}}(),v=function(){var e=u(i().mark((function e(t){var n,r;return i().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n='\n  import Mist from 0xMist\n\n  transaction(raffleID: UInt64) {\n      let raffle: &Mist.Raffle\n  \n      prepare(acct: AuthAccount) {\n          let raffleCollection = acct.borrow<&Mist.RaffleCollection>(from: Mist.RaffleCollectionStoragePath)\n              ?? panic("Could not borrow raffleCollection")\n  \n          self.raffle = raffleCollection.borrowRaffleRef(raffleID: raffleID)!\n      }\n  \n      execute {\n          self.raffle.togglePause()\n      }\n  }\n  '.replace(m,a.Z.mistAddress),e.next=3,o.JG({cadence:n,args:function(e,n){return[e(t,n.UInt64)]},proposer:o.ar,payer:o.ar,limit:9999});case 3:return r=e.sent,e.abrupt("return",r);case 5:case"end":return e.stop()}}),e)})));return function(t){return e.apply(this,arguments)}}(),I=function(){var e=u(i().mark((function e(t,n,r){var a;return i().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return a=function(){var e=u(i().mark((function e(){return i().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,R(t);case 2:return e.abrupt("return",e.sent);case 3:case"end":return e.stop()}}),e)})));return function(){return e.apply(this,arguments)}}(),e.next=3,(0,l.Z)(a,n,r);case 3:return e.abrupt("return",e.sent);case 4:case"end":return e.stop()}}),e)})));return function(t,n,r){return e.apply(this,arguments)}}(),R=function(){var e=u(i().mark((function e(t){var n,r;return i().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n='\n  import Mist from 0xMist\n\n  transaction(raffleID: UInt64) {\n      let raffle: &Mist.Raffle\n  \n      prepare(acct: AuthAccount) {\n          let raffleCollection = acct.borrow<&Mist.RaffleCollection>(from: Mist.RaffleCollectionStoragePath)\n              ?? panic("Could not borrow raffleCollection")\n          self.raffle = raffleCollection.borrowRaffleRef(raffleID: raffleID)!\n      }\n  \n      execute {\n          self.raffle.draw(params: {})\n      }\n  }\n  '.replace(m,a.Z.mistAddress),e.next=3,o.JG({cadence:n,args:function(e,n){return[e(t,n.UInt64)]},proposer:o.ar,payer:o.ar,limit:9999});case 3:return r=e.sent,e.abrupt("return",r);case 5:case"end":return e.stop()}}),e)})));return function(t){return e.apply(this,arguments)}}(),A=function(){var e=u(i().mark((function e(t,n,r){var a;return i().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return a=function(){var e=u(i().mark((function e(){return i().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,D(t);case 2:return e.abrupt("return",e.sent);case 3:case"end":return e.stop()}}),e)})));return function(){return e.apply(this,arguments)}}(),e.next=3,(0,l.Z)(a,n,r);case 3:return e.abrupt("return",e.sent);case 4:case"end":return e.stop()}}),e)})));return function(t,n,r){return e.apply(this,arguments)}}(),D=function(){var e=u(i().mark((function e(t){var n,r;return i().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n='\n  import Mist from 0xMist\n\n  transaction(raffleID: UInt64) {\n      let raffle: &Mist.Raffle\n  \n      prepare(acct: AuthAccount) {\n          let raffleCollection = acct.borrow<&Mist.RaffleCollection>(from: Mist.RaffleCollectionStoragePath)\n              ?? panic("Could not borrow raffleCollection")\n          self.raffle = raffleCollection.borrowRaffleRef(raffleID: raffleID)!\n      }\n  \n      execute {\n          self.raffle.batchDraw(params: {})\n      }\n  }\n  '.replace(m,a.Z.mistAddress),e.next=3,o.JG({cadence:n,args:function(e,n){return[e(t,n.UInt64)]},proposer:o.ar,payer:o.ar,limit:9999});case 3:return r=e.sent,e.abrupt("return",r);case 5:case"end":return e.stop()}}),e)})));return function(t){return e.apply(this,arguments)}}(),C=function(){var e=u(i().mark((function e(t,n,r,a,o){var c;return i().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return c=function(){var e=u(i().mark((function e(){return i().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,S(t,n,r);case 2:return e.abrupt("return",e.sent);case 3:case"end":return e.stop()}}),e)})));return function(){return e.apply(this,arguments)}}(),e.next=3,(0,l.Z)(c,a,o);case 3:return e.abrupt("return",e.sent);case 4:case"end":return e.stop()}}),e)})));return function(t,n,r,i,a){return e.apply(this,arguments)}}(),N=function(){var e=u(i().mark((function e(t,n,r,a,o){var c;return i().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return c=function(){var e=u(i().mark((function e(){return i().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,k(t,n,r);case 2:return e.abrupt("return",e.sent);case 3:case"end":return e.stop()}}),e)})));return function(){return e.apply(this,arguments)}}(),e.next=3,(0,l.Z)(c,a,o);case 3:return e.abrupt("return",e.sent);case 4:case"end":return e.stop()}}),e)})));return function(t,n,r,i,a){return e.apply(this,arguments)}}(),k=function(){var e=u(i().mark((function e(t,n,r){var l,c;return i().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return l="\n  import Mist from 0xMist\n  import NonFungibleToken from 0xNonFungibleToken\n  import ".concat(n," from ").concat(r,"\n  \n  transaction(raffleID: UInt64) {\n      let raffleCollection: &Mist.RaffleCollection\n      let nftCollectionRef: &").concat(n,'.Collection{NonFungibleToken.CollectionPublic}\n  \n      prepare(acct: AuthAccount) {\n          self.raffleCollection = acct.borrow<&Mist.RaffleCollection>(from: Mist.RaffleCollectionStoragePath)\n              ?? panic("Could not borrow raffleCollection")\n  \n          let raffle = self.raffleCollection.borrowRaffleRef(raffleID: raffleID)!\n  \n          self.nftCollectionRef = acct.borrow<&').concat(n,'.Collection{NonFungibleToken.CollectionPublic}>(from: raffle.nftInfo.collectionStoragePath)\n              ?? panic("Could not borrow collection from signer")\n      }\n  \n      execute {\n          self.raffleCollection.deleteRaffle(raffleID: raffleID, receiver: self.nftCollectionRef)\n      }\n  }\n  ').replace(p,a.Z.nonFungibleTokenAddress).replace(m,a.Z.mistAddress),e.next=3,o.JG({cadence:l,args:function(e,n){return[e(t,n.UInt64)]},proposer:o.ar,payer:o.ar,limit:9999});case 3:return c=e.sent,e.abrupt("return",c);case 5:case"end":return e.stop()}}),e)})));return function(t,n,r){return e.apply(this,arguments)}}(),S=function(){var e=u(i().mark((function e(t,n,r){var l,c;return i().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return l="\n  import Mist from 0xMist\n  import NonFungibleToken from 0xNonFungibleToken\n  import ".concat(n," from ").concat(r,"\n  \n  transaction(raffleID: UInt64) {\n      let raffle: &Mist.Raffle\n      let nftCollectionRef: &").concat(n,'.Collection{NonFungibleToken.CollectionPublic}\n  \n      prepare(acct: AuthAccount) {\n          let raffleCollection = acct.borrow<&Mist.RaffleCollection>(from: Mist.RaffleCollectionStoragePath)\n              ?? panic("Could not borrow raffleCollection")\n  \n          self.raffle = raffleCollection.borrowRaffleRef(raffleID: raffleID)!\n  \n          self.nftCollectionRef = acct.borrow<&').concat(n,'.Collection{NonFungibleToken.CollectionPublic}>(from: self.raffle.nftInfo.collectionStoragePath)\n              ?? panic("Could not borrow collection from signer")\n      }\n  \n      execute {\n          self.raffle.end(receiver: self.nftCollectionRef)\n      }\n  }\n  ').replace(p,a.Z.nonFungibleTokenAddress).replace(m,a.Z.mistAddress),e.next=3,o.JG({cadence:l,args:function(e,n){return[e(t,n.UInt64)]},proposer:o.ar,payer:o.ar,limit:9999});case 3:return c=e.sent,e.abrupt("return",c);case 5:case"end":return e.stop()}}),e)})));return function(t,n,r){return e.apply(this,arguments)}}(),E=function(){var e=u(i().mark((function e(t,n,r,a,o){var c;return i().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return c=function(){var e=u(i().mark((function e(){return i().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,M(t,n,r);case 2:return e.abrupt("return",e.sent);case 3:case"end":return e.stop()}}),e)})));return function(){return e.apply(this,arguments)}}(),e.next=3,(0,l.Z)(c,a,o);case 3:return e.abrupt("return",e.sent);case 4:case"end":return e.stop()}}),e)})));return function(t,n,r,i,a){return e.apply(this,arguments)}}(),M=function(){var e=u(i().mark((function e(t,n,r){var l,s,f,u,p,g,h,y,x,w;return i().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return l=r.contractName,s="/storage/".concat(r.collectionStoragePath.identifier),f="/public/".concat(r.collectionPublicPath.identifier),u=r.collectionType.restrictions.map((function(e){return e.typeID})),p=d((0,c.xg)(u),2),g=p[0],h=p[1],y='\n  import Mist from 0xMist\n  import DrizzleRecorder from 0xDrizzleRecorder\n  \n  transaction(raffleID: UInt64, host: Address) {\n      let raffle: &{Mist.IRafflePublic}\n      let receiver: &{NonFungibleToken.CollectionPublic}\n      let recorderRef: &DrizzleRecorder.Recorder\n  \n      prepare(acct: AuthAccount) {\n          let raffleCollection = getAccount(host)\n              .getCapability(Mist.RaffleCollectionPublicPath)\n              .borrow<&Mist.RaffleCollection{Mist.IRaffleCollectionPublic}>()\n              ?? panic("Could not borrow the public RaffleCollection from the host")\n          \n          let raffle = raffleCollection.borrowPublicRaffleRef(raffleID: raffleID)\n              ?? panic("Could not borrow the public Raffle from the collection")\n          \n          if acct.borrow<&NonFungibleToken.Collection>(from: '.concat(s,") != nil \n            && !acct.getCapability<&{").concat(h,"}>(").concat(f,").check() {\n            acct.unlink(").concat(f,")\n            acct.link<&{").concat(h,"}>(\n              ").concat(f,",\n              target: ").concat(s,"\n            )\n          } else if (acct.borrow<&").concat(l,".Collection>(from: ").concat(s,") == nil) {\n              acct.save(<-").concat(l,".createEmptyCollection(), to: ").concat(s,")\n  \n              acct.link<&{").concat(h,"}>(\n                  ").concat(f,",\n                  target: ").concat(s,"\n              )\n          }\n\n          if (acct.borrow<&DrizzleRecorder.Recorder>(from: DrizzleRecorder.RecorderStoragePath) == nil) {\n            acct.save(<-DrizzleRecorder.createEmptyRecorder(), to: DrizzleRecorder.RecorderStoragePath)\n\n            acct.link<&{DrizzleRecorder.IRecorderPublic}>(\n                DrizzleRecorder.RecorderPublicPath,\n                target: DrizzleRecorder.RecorderStoragePath\n            )\n          }\n          \n          self.raffle = raffle \n          self.receiver = acct\n              .getCapability(").concat(f,')\n              .borrow<&{NonFungibleToken.CollectionPublic}>()\n              ?? panic("Could not borrow Receiver")\n\n          self.recorderRef = acct\n            .borrow<&DrizzleRecorder.Recorder>(from: DrizzleRecorder.RecorderStoragePath)\n            ?? panic("Could not borrow Recorder")\n      }\n  \n      execute {\n        self.raffle.claim(receiver: self.receiver, params: {\n          "recorderRef": self.recorderRef\n        })\n      }\n  }\n  ').replace(m,a.Z.mistAddress).replace(b,a.Z.drizzleRecorderAddress),x=g.concat(y),e.next=9,o.JG({cadence:x,args:function(e,r){return[e(t,r.UInt64),e(n,r.Address)]},proposer:o.ar,payer:o.ar,limit:9999});case 9:return w=e.sent,e.abrupt("return",w);case 11:case"end":return e.stop()}}),e)})));return function(t,n,r){return e.apply(this,arguments)}}()}}]);